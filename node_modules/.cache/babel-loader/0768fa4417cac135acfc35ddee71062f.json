{"ast":null,"code":"\"use strict\";\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('../util'),\n      style = _require.style,\n      clear = _require.clear;\n\nconst _require2 = require('sisteransi'),\n      erase = _require2.erase,\n      cursor = _require2.cursor;\n/**\n * ConfirmPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Boolean} [opts.initial] Default value (true/false)\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.yes] The \"Yes\" label\n * @param {String} [opts.yesOption] The \"Yes\" option when choosing between yes/no\n * @param {String} [opts.no] The \"No\" label\n * @param {String} [opts.noOption] The \"No\" option when choosing between yes/no\n */\n\n\nclass ConfirmPrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.value = opts.initial;\n    this.initialValue = !!opts.initial;\n    this.yesMsg = opts.yes || 'yes';\n    this.yesOption = opts.yesOption || '(Y/n)';\n    this.noMsg = opts.no || 'no';\n    this.noOption = opts.noOption || '(y/N)';\n    this.render();\n  }\n\n  reset() {\n    this.value = this.initialValue;\n    this.fire();\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    this.value = this.value || false;\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  _(c, key) {\n    if (c.toLowerCase() === 'y') {\n      this.value = true;\n      return this.submit();\n    }\n\n    if (c.toLowerCase() === 'n') {\n      this.value = false;\n      return this.submit();\n    }\n\n    return this.bell();\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText));\n    super.render();\n    this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(this.done), this.done ? this.value ? this.yesMsg : this.noMsg : color.gray(this.initialValue ? this.yesOption : this.noOption)].join(' ');\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n\n}\n\nmodule.exports = ConfirmPrompt;","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/node_modules/prompts/dist/elements/confirm.js"],"names":["color","require","Prompt","_require","style","clear","_require2","erase","cursor","ConfirmPrompt","constructor","opts","msg","message","value","initial","initialValue","yesMsg","yes","yesOption","noMsg","no","noOption","render","reset","fire","abort","done","aborted","out","write","close","submit","_","c","key","toLowerCase","bell","closed","firstRender","hide","outputText","symbol","bold","delimiter","gray","join","line","to","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('../util'),\n      style = _require.style,\n      clear = _require.clear;\n\nconst _require2 = require('sisteransi'),\n      erase = _require2.erase,\n      cursor = _require2.cursor;\n/**\n * ConfirmPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Boolean} [opts.initial] Default value (true/false)\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.yes] The \"Yes\" label\n * @param {String} [opts.yesOption] The \"Yes\" option when choosing between yes/no\n * @param {String} [opts.no] The \"No\" label\n * @param {String} [opts.noOption] The \"No\" option when choosing between yes/no\n */\n\n\nclass ConfirmPrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.value = opts.initial;\n    this.initialValue = !!opts.initial;\n    this.yesMsg = opts.yes || 'yes';\n    this.yesOption = opts.yesOption || '(Y/n)';\n    this.noMsg = opts.no || 'no';\n    this.noOption = opts.noOption || '(y/N)';\n    this.render();\n  }\n\n  reset() {\n    this.value = this.initialValue;\n    this.fire();\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    this.value = this.value || false;\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  _(c, key) {\n    if (c.toLowerCase() === 'y') {\n      this.value = true;\n      return this.submit();\n    }\n\n    if (c.toLowerCase() === 'n') {\n      this.value = false;\n      return this.submit();\n    }\n\n    return this.bell();\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText));\n    super.render();\n    this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(this.done), this.done ? this.value ? this.yesMsg : this.noMsg : color.gray(this.initialValue ? this.yesOption : this.noOption)].join(' ');\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n\n}\n\nmodule.exports = ConfirmPrompt;"]},"metadata":{},"sourceType":"script"}