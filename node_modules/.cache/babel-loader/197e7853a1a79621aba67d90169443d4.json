{"ast":null,"code":"'use strict';\n\nconst c = require('kleur');\n\nconst figures = require('./figures'); // rendering user input.\n\n\nconst styles = Object.freeze({\n  password: {\n    scale: 1,\n    render: input => '*'.repeat(input.length)\n  },\n  emoji: {\n    scale: 2,\n    render: input => 'ðŸ˜ƒ'.repeat(input.length)\n  },\n  invisible: {\n    scale: 0,\n    render: input => ''\n  },\n  default: {\n    scale: 1,\n    render: input => `${input}`\n  }\n});\n\nconst render = type => styles[type] || styles.default; // icon to signalize a prompt.\n\n\nconst symbols = Object.freeze({\n  aborted: c.red(figures.cross),\n  done: c.green(figures.tick),\n  default: c.cyan('?')\n});\n\nconst symbol = (done, aborted) => aborted ? symbols.aborted : done ? symbols.done : symbols.default; // between the question and the user's input.\n\n\nconst delimiter = completing => c.gray(completing ? figures.ellipsis : figures.pointerSmall);\n\nconst item = (expandable, expanded) => c.gray(expandable ? expanded ? figures.pointerSmall : '+' : figures.line);\n\nmodule.exports = {\n  styles,\n  render,\n  symbols,\n  symbol,\n  delimiter,\n  item\n};","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/node_modules/prompts/dist/util/style.js"],"names":["c","require","figures","styles","Object","freeze","password","scale","render","input","repeat","length","emoji","invisible","default","type","symbols","aborted","red","cross","done","green","tick","cyan","symbol","delimiter","completing","gray","ellipsis","pointerSmall","item","expandable","expanded","line","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,OAAD,CAAjB;;AAEA,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB,C,CAAsC;;;AAGtC,MAAME,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC3BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,CADC;AAERC,IAAAA,MAAM,EAAEC,KAAK,IAAI,IAAIC,MAAJ,CAAWD,KAAK,CAACE,MAAjB;AAFT,GADiB;AAK3BC,EAAAA,KAAK,EAAE;AACLL,IAAAA,KAAK,EAAE,CADF;AAELC,IAAAA,MAAM,EAAEC,KAAK,IAAI,KAAKC,MAAL,CAAYD,KAAK,CAACE,MAAlB;AAFZ,GALoB;AAS3BE,EAAAA,SAAS,EAAE;AACTN,IAAAA,KAAK,EAAE,CADE;AAETC,IAAAA,MAAM,EAAEC,KAAK,IAAI;AAFR,GATgB;AAa3BK,EAAAA,OAAO,EAAE;AACPP,IAAAA,KAAK,EAAE,CADA;AAEPC,IAAAA,MAAM,EAAEC,KAAK,IAAK,GAAEA,KAAM;AAFnB;AAbkB,CAAd,CAAf;;AAmBA,MAAMD,MAAM,GAAGO,IAAI,IAAIZ,MAAM,CAACY,IAAD,CAAN,IAAgBZ,MAAM,CAACW,OAA9C,C,CAAuD;;;AAGvD,MAAME,OAAO,GAAGZ,MAAM,CAACC,MAAP,CAAc;AAC5BY,EAAAA,OAAO,EAAEjB,CAAC,CAACkB,GAAF,CAAMhB,OAAO,CAACiB,KAAd,CADmB;AAE5BC,EAAAA,IAAI,EAAEpB,CAAC,CAACqB,KAAF,CAAQnB,OAAO,CAACoB,IAAhB,CAFsB;AAG5BR,EAAAA,OAAO,EAAEd,CAAC,CAACuB,IAAF,CAAO,GAAP;AAHmB,CAAd,CAAhB;;AAMA,MAAMC,MAAM,GAAG,CAACJ,IAAD,EAAOH,OAAP,KAAmBA,OAAO,GAAGD,OAAO,CAACC,OAAX,GAAqBG,IAAI,GAAGJ,OAAO,CAACI,IAAX,GAAkBJ,OAAO,CAACF,OAA5F,C,CAAqG;;;AAGrG,MAAMW,SAAS,GAAGC,UAAU,IAAI1B,CAAC,CAAC2B,IAAF,CAAOD,UAAU,GAAGxB,OAAO,CAAC0B,QAAX,GAAsB1B,OAAO,CAAC2B,YAA/C,CAAhC;;AAEA,MAAMC,IAAI,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0BhC,CAAC,CAAC2B,IAAF,CAAOI,UAAU,GAAGC,QAAQ,GAAG9B,OAAO,CAAC2B,YAAX,GAA0B,GAArC,GAA2C3B,OAAO,CAAC+B,IAApE,CAAvC;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfhC,EAAAA,MADe;AAEfK,EAAAA,MAFe;AAGfQ,EAAAA,OAHe;AAIfQ,EAAAA,MAJe;AAKfC,EAAAA,SALe;AAMfK,EAAAA;AANe,CAAjB","sourcesContent":["'use strict';\n\nconst c = require('kleur');\n\nconst figures = require('./figures'); // rendering user input.\n\n\nconst styles = Object.freeze({\n  password: {\n    scale: 1,\n    render: input => '*'.repeat(input.length)\n  },\n  emoji: {\n    scale: 2,\n    render: input => 'ðŸ˜ƒ'.repeat(input.length)\n  },\n  invisible: {\n    scale: 0,\n    render: input => ''\n  },\n  default: {\n    scale: 1,\n    render: input => `${input}`\n  }\n});\n\nconst render = type => styles[type] || styles.default; // icon to signalize a prompt.\n\n\nconst symbols = Object.freeze({\n  aborted: c.red(figures.cross),\n  done: c.green(figures.tick),\n  default: c.cyan('?')\n});\n\nconst symbol = (done, aborted) => aborted ? symbols.aborted : done ? symbols.done : symbols.default; // between the question and the user's input.\n\n\nconst delimiter = completing => c.gray(completing ? figures.ellipsis : figures.pointerSmall);\n\nconst item = (expandable, expanded) => c.gray(expandable ? expanded ? figures.pointerSmall : '+' : figures.line);\n\nmodule.exports = {\n  styles,\n  render,\n  symbols,\n  symbol,\n  delimiter,\n  item\n};"]},"metadata":{},"sourceType":"script"}