{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/src/components/Questions.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { questionsRequest } from '../actions';\n\nclass Questions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: {}\n    };\n  }\n\n  async componentDidMount() {\n    const requestQuestions = this.props.requestQuestions;\n    const token = localStorage.getItem('token');\n    await requestQuestions(token);\n    const questions = this.props.questions;\n    this.setState({\n      questions\n    });\n  }\n\n  render() {\n    console.log(questions.results);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, questions.results && questions.results.map(({\n      category\n    }) => // <p data-testid=\"question-category\">Categoria da pergunta</p>\n    // <p data-testid=\"question-text\">Texto da pergunta</p>\n    React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, category)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  questions: state.triviaReducer.questions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestQuestions: token => dispatch(questionsRequest(token))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/src/components/Questions.jsx"],"names":["React","Component","connect","questionsRequest","Questions","constructor","state","questions","componentDidMount","requestQuestions","props","token","localStorage","getItem","setState","render","console","log","results","map","category","mapStateToProps","triviaReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AAAA,UAChBC,gBADgB,GACK,KAAKC,KADV,CAChBD,gBADgB;AAExB,UAAME,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMJ,gBAAgB,CAACE,KAAD,CAAtB;AAHwB,UAIhBJ,SAJgB,GAIF,KAAKG,KAJH,CAIhBH,SAJgB;AAKxB,SAAKO,QAAL,CAAc;AACZP,MAAAA;AADY,KAAd;AAGD;;AAEDQ,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAS,CAACW,OAAtB;AAEA,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIX,SAAS,CAACW,OAAV,IAAqBX,SAAS,CAACW,OAAV,CAAkBC,GAAlB,CAAsB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAC3C;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,QAAJ,CAHqB,CADzB,CAFF;AAUD;;AA/B+B;;AAkClC,MAAMC,eAAe,GAAIf,KAAD,KAAY;AAClCC,EAAAA,SAAS,EAAED,KAAK,CAACgB,aAAN,CAAoBf;AADG,CAAZ,CAAxB;;AAIA,MAAMgB,kBAAkB,GAAIC,QAAD,KAAe;AACxCf,EAAAA,gBAAgB,EAAGE,KAAD,IAAWa,QAAQ,CAACrB,gBAAgB,CAACQ,KAAD,CAAjB;AADG,CAAf,CAA3B;;AAIA,eAAeT,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { questionsRequest } from '../actions';\n\nclass Questions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: {},\n    };\n  }\n\n  async componentDidMount() {\n    const { requestQuestions } = this.props;\n    const token = localStorage.getItem('token');\n    await requestQuestions(token);\n    const { questions } = this.props;\n    this.setState({\n      questions,\n    });\n  }\n\n  render() {\n    console.log(questions.results);\n\n    return (\n\n      <div>\n        { questions.results && questions.results.map(({ category }) => (\n          // <p data-testid=\"question-category\">Categoria da pergunta</p>\n          // <p data-testid=\"question-text\">Texto da pergunta</p>\n          <p>{category}</p>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questions: state.triviaReducer.questions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestQuestions: (token) => dispatch(questionsRequest(token)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}