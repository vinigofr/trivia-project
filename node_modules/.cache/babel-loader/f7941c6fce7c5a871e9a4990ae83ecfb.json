{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/src/pages/Feedback.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\n\nclass Feedback extends Component {\n  scoreMessage(assertions) {\n    switch (assertions) {\n      case assertions < 3:\n        return 'Podia ser melhor...';\n\n      default:\n        return 'Mandou bem!';\n    }\n  }\n\n  render() {\n    const sectionPlayer = this.props.sectionPlayer;\n    const name = sectionPlayer.name,\n          score = sectionPlayer.score,\n          gravatarEmail = sectionPlayer.gravatarEmail,\n          assertions = sectionPlayer.assertions;\n    console.log(sectionPlayer.player.assertions);\n    const gravatarHash = md5(gravatarEmail).toString();\n    return React.createElement(\"div\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.scoreMessage(assertions)), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, 'Jogador: ', React.createElement(\"span\", {\n      \"data-testid\": \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, name)), React.createElement(\"img\", {\n      alt: \"avatar\",\n      src: `https://www.gravatar.com/avatar/${gravatarHash}`,\n      \"data-testid\": \"header-profile-picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Pontua\\xE7\\xE3o:\", React.createElement(\"span\", {\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, score)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  sectionPlayer: state.sectionReducer\n});\n\nexport default connect(mapStateToProps)(Feedback);\nFeedback.propTypes = {\n  sectionPlayer: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    gravatarEmail: PropTypes.string.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/src/pages/Feedback.jsx"],"names":["React","Component","connect","md5","PropTypes","Feedback","scoreMessage","assertions","render","sectionPlayer","props","name","score","gravatarEmail","console","log","player","gravatarHash","toString","mapStateToProps","state","sectionReducer","propTypes","shape","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,YAAY,CAACC,UAAD,EAAa;AACvB,YAAQA,UAAR;AACA,WAAMA,UAAU,GAAG,CAAnB;AACE,eAAO,qBAAP;;AACF;AACE,eAAO,aAAP;AAJF;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,aADD,GACmB,KAAKC,KADxB,CACCD,aADD;AAAA,UAECE,IAFD,GAE4CF,aAF5C,CAECE,IAFD;AAAA,UAEOC,KAFP,GAE4CH,aAF5C,CAEOG,KAFP;AAAA,UAEcC,aAFd,GAE4CJ,aAF5C,CAEcI,aAFd;AAAA,UAE6BN,UAF7B,GAE4CE,aAF5C,CAE6BF,UAF7B;AAGPO,IAAAA,OAAO,CAACC,GAAR,CAAYN,aAAa,CAACO,MAAd,CAAqBT,UAAjC;AACA,UAAMU,YAAY,GAAGd,GAAG,CAACU,aAAD,CAAH,CAAmBK,QAAnB,EAArB;AAEA,WACE;AAAK,qBAAY,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKZ,YAAL,CAAkBC,UAAlB,CAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,WADH,EAEE;AAAM,qBAAY,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCI,IAAzC,CAFF,CAFF,EAME;AACE,MAAA,GAAG,EAAC,QADN;AAEE,MAAA,GAAG,EAAI,mCAAkCM,YAAa,EAFxD;AAGE,qBAAY,wBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE;AACE,qBAAY,cADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGL,KAHH,CAFF,CAXF,CADF;AAsBD;;AAtC8B;;AAyCjC,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,aAAa,EAAEW,KAAK,CAACC;AADa,CAAZ,CAAxB;;AAIA,eAAenB,OAAO,CAACiB,eAAD,CAAP,CAAyBd,QAAzB,CAAf;AAEAA,QAAQ,CAACiB,SAAT,GAAqB;AACnBb,EAAAA,aAAa,EAAEL,SAAS,CAACmB,KAAV,CAAgB;AAC7BZ,IAAAA,IAAI,EAAEP,SAAS,CAACoB,MAAV,CAAiBC,UADM;AAE7Bb,IAAAA,KAAK,EAAER,SAAS,CAACsB,MAAV,CAAiBD,UAFK;AAG7BZ,IAAAA,aAAa,EAAET,SAAS,CAACoB,MAAV,CAAiBC;AAHH,GAAhB,EAIZA;AALgB,CAArB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\n\nclass Feedback extends Component {\n  scoreMessage(assertions) {\n    switch (assertions) {\n    case (assertions < 3):\n      return 'Podia ser melhor...';\n    default:\n      return 'Mandou bem!';\n    }\n  }\n\n  render() {\n    const { sectionPlayer } = this.props;\n    const { name, score, gravatarEmail, assertions } = sectionPlayer;\n    console.log(sectionPlayer.player.assertions);\n    const gravatarHash = md5(gravatarEmail).toString();\n\n    return (\n      <div data-testid=\"feedback-text\">\n        <h1>{this.scoreMessage(assertions)}</h1>\n        <h1>\n          {'Jogador: '}\n          <span data-testid=\"header-player-name\">{ name }</span>\n        </h1>\n        <img\n          alt=\"avatar\"\n          src={ `https://www.gravatar.com/avatar/${gravatarHash}` }\n          data-testid=\"header-profile-picture\"\n        />\n        <p>\n          Pontuação:\n          <span\n            data-testid=\"header-score\"\n          >\n            {score}\n          </span>\n        </p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  sectionPlayer: state.sectionReducer,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n\nFeedback.propTypes = {\n  sectionPlayer: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    gravatarEmail: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}