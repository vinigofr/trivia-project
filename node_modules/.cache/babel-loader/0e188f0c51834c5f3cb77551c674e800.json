{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/src/components/Questions.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { questionsRequest } from '../actions';\n\nclass Questions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questionIndex: 0 // isLoad: false,\n      // questions: [],\n\n    };\n    this.handleState = this.handleState.bind(this);\n  }\n\n  async componentDidMount() {\n    const requestQuestions = this.props.requestQuestions;\n    const token = localStorage.getItem('token');\n    await requestQuestions(token);\n    const questions = this.props.questions;\n    const results = questions.results;\n    this.handleState(questions);\n  }\n\n  handleState(questions) {\n    this.setState({\n      questions: questions.results\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          questions = _this$state.questions,\n          questionIndex = _this$state.questionIndex;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, questions.map((anyQuestion, index) => {\n      if (questionIndex === index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          \"data-testid\": \"question-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, anyQuestion.name), React.createElement(\"p\", {\n          \"data-testid\": \"question-category\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, anyQuestion.category));\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  questions: state.triviaReducer.questions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestQuestions: token => dispatch(questionsRequest(token))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/src/components/Questions.jsx"],"names":["React","Component","connect","questionsRequest","Questions","constructor","state","questionIndex","handleState","bind","componentDidMount","requestQuestions","props","token","localStorage","getItem","questions","results","setState","render","map","anyQuestion","index","name","category","mapStateToProps","triviaReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,CADJ,CAEX;AACA;;AAHW,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAED,QAAMC,iBAAN,GAA2B;AAAA,UACjBC,gBADiB,GACI,KAAKC,KADT,CACjBD,gBADiB;AAEzB,UAAME,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,UAAMJ,gBAAgB,CAACE,KAAD,CAAtB;AAJyB,UAMjBG,SANiB,GAMH,KAAKJ,KANF,CAMjBI,SANiB;AAAA,UAOjBC,OAPiB,GAOLD,SAPK,CAOjBC,OAPiB;AASzB,SAAKT,WAAL,CAAiBQ,SAAjB;AACD;;AAEDR,EAAAA,WAAW,CAACQ,SAAD,EAAY;AACrB,SAAKE,QAAL,CAAc;AACZF,MAAAA,SAAS,EAAEA,SAAS,CAACC;AADT,KAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKb,KADnC;AAAA,UACCU,SADD,eACCA,SADD;AAAA,UACYT,aADZ,eACYA,aADZ;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGS,SAAS,CAACI,GAAV,CAAc,CAACC,WAAD,EAAcC,KAAd,KAAwB;AACrC,UAAIf,aAAa,KAAKe,KAAtB,EAA6B;AAC3B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,yBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgCD,WAAW,CAACE,IAA5C,CADF,EAEE;AAAG,yBAAY,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCF,WAAW,CAACG,QAAhD,CAFF,CADF;AAMD;AACF,KATA,CADH,CADF;AAcD;;AA9C+B;;AAiDlC,MAAMC,eAAe,GAAInB,KAAD,KAAY;AAClCU,EAAAA,SAAS,EAAEV,KAAK,CAACoB,aAAN,CAAoBV;AADG,CAAZ,CAAxB;;AAIA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACxCjB,EAAAA,gBAAgB,EAAGE,KAAD,IAAWe,QAAQ,CAACzB,gBAAgB,CAACU,KAAD,CAAjB;AADG,CAAf,CAA3B;;AAIA,eAAeX,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CvB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { questionsRequest } from '../actions';\n\nclass Questions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questionIndex: 0,\n      // isLoad: false,\n      // questions: [],\n    };\n    this.handleState = this.handleState.bind(this);\n  }\n\n  async componentDidMount () {\n    const { requestQuestions } = this.props;\n    const token = localStorage.getItem('token');\n\n    await requestQuestions(token);\n\n    const { questions } = this.props;\n    const { results } = questions;\n\n    this.handleState(questions);\n  }\n\n  handleState(questions) {\n    this.setState({\n      questions: questions.results,\n    });\n  }\n\n  render() {\n    const { questions, questionIndex } = this.state;\n\n    return (\n      <div>\n        {questions.map((anyQuestion, index) => {\n          if (questionIndex === index) {\n            return (\n              <div>\n                <p data-testid=\"question-text\">{anyQuestion.name}</p>\n                <p data-testid=\"question-category\">{anyQuestion.category}</p>\n              </div>\n            );\n          }\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questions: state.triviaReducer.questions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestQuestions: (token) => dispatch(questionsRequest(token)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}