{"ast":null,"code":"'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('sisteransi'),\n      erase = _require.erase,\n      cursor = _require.cursor;\n\nconst _require2 = require('../util'),\n      style = _require2.style,\n      clear = _require2.clear,\n      figures = _require2.figures,\n      wrap = _require2.wrap,\n      entriesToDisplay = _require2.entriesToDisplay;\n\nconst getVal = (arr, i) => arr[i] && (arr[i].value || arr[i].title || arr[i]);\n\nconst getTitle = (arr, i) => arr[i] && (arr[i].title || arr[i].value || arr[i]);\n\nconst getIndex = (arr, valOrTitle) => {\n  const index = arr.findIndex(el => el.value === valOrTitle || el.title === valOrTitle);\n  return index > -1 ? index : undefined;\n};\n/**\n * TextPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of auto-complete choices objects\n * @param {Function} [opts.suggest] Filter function. Defaults to sort by title\n * @param {Number} [opts.limit=10] Max number of results to show\n * @param {Number} [opts.cursor=0] Cursor start position\n * @param {String} [opts.style='default'] Render style\n * @param {String} [opts.fallback] Fallback message - initial to default value\n * @param {String} [opts.initial] Index of the default value\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.noMatches] The no matches found label\n */\n\n\nclass AutocompletePrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.suggest = opts.suggest;\n    this.choices = opts.choices;\n    this.initial = typeof opts.initial === 'number' ? opts.initial : getIndex(opts.choices, opts.initial);\n    this.select = this.initial || opts.cursor || 0;\n    this.i18n = {\n      noMatches: opts.noMatches || 'no matches found'\n    };\n    this.fallback = opts.fallback || this.initial;\n    this.suggestions = [];\n    this.input = '';\n    this.limit = opts.limit || 10;\n    this.cursor = 0;\n    this.transform = style.render(opts.style);\n    this.scale = this.transform.scale;\n    this.render = this.render.bind(this);\n    this.complete = this.complete.bind(this);\n    this.clear = clear('');\n    this.complete(this.render);\n    this.render();\n  }\n\n  set fallback(fb) {\n    this._fb = Number.isSafeInteger(parseInt(fb)) ? parseInt(fb) : fb;\n  }\n\n  get fallback() {\n    let choice;\n    if (typeof this._fb === 'number') choice = this.choices[this._fb];else if (typeof this._fb === 'string') choice = {\n      title: this._fb\n    };\n    return choice || this._fb || {\n      title: this.i18n.noMatches\n    };\n  }\n\n  moveSelect(i) {\n    this.select = i;\n    if (this.suggestions.length > 0) this.value = getVal(this.suggestions, i);else this.value = this.fallback.value;\n    this.fire();\n  }\n\n  complete(cb) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const p = _this.completing = _this.suggest(_this.input, _this.choices);\n\n      const suggestions = yield p;\n      if (_this.completing !== p) return;\n      _this.suggestions = suggestions.map((s, i, arr) => ({\n        title: getTitle(arr, i),\n        value: getVal(arr, i),\n        description: s.description\n      }));\n      _this.completing = false;\n      const l = Math.max(suggestions.length - 1, 0);\n\n      _this.moveSelect(Math.min(l, _this.select));\n\n      cb && cb();\n    })();\n  }\n\n  reset() {\n    this.input = '';\n    this.complete(() => {\n      this.moveSelect(this.initial !== void 0 ? this.initial : 0);\n      this.render();\n    });\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  _(c, key) {\n    let s1 = this.input.slice(0, this.cursor);\n    let s2 = this.input.slice(this.cursor);\n    this.input = `${s1}${c}${s2}`;\n    this.cursor = s1.length + 1;\n    this.complete(this.render);\n    this.render();\n  }\n\n  delete() {\n    if (this.cursor === 0) return this.bell();\n    let s1 = this.input.slice(0, this.cursor - 1);\n    let s2 = this.input.slice(this.cursor);\n    this.input = `${s1}${s2}`;\n    this.complete(this.render);\n    this.cursor = this.cursor - 1;\n    this.render();\n  }\n\n  deleteForward() {\n    if (this.cursor * this.scale >= this.rendered.length) return this.bell();\n    let s1 = this.input.slice(0, this.cursor);\n    let s2 = this.input.slice(this.cursor + 1);\n    this.input = `${s1}${s2}`;\n    this.complete(this.render);\n    this.render();\n  }\n\n  first() {\n    this.moveSelect(0);\n    this.render();\n  }\n\n  last() {\n    this.moveSelect(this.suggestions.length - 1);\n    this.render();\n  }\n\n  up() {\n    if (this.select <= 0) return this.bell();\n    this.moveSelect(this.select - 1);\n    this.render();\n  }\n\n  down() {\n    if (this.select >= this.suggestions.length - 1) return this.bell();\n    this.moveSelect(this.select + 1);\n    this.render();\n  }\n\n  next() {\n    if (this.select === this.suggestions.length - 1) {\n      this.moveSelect(0);\n    } else this.moveSelect(this.select + 1);\n\n    this.render();\n  }\n\n  nextPage() {\n    this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1));\n    this.render();\n  }\n\n  prevPage() {\n    this.moveSelect(Math.max(this.select - this.limit, 0));\n    this.render();\n  }\n\n  left() {\n    if (this.cursor <= 0) return this.bell();\n    this.cursor = this.cursor - 1;\n    this.render();\n  }\n\n  right() {\n    if (this.cursor * this.scale >= this.rendered.length) return this.bell();\n    this.cursor = this.cursor + 1;\n    this.render();\n  }\n\n  renderOption(v, hovered, isStart, isEnd) {\n    let desc;\n    let prefix = isStart ? figures.arrowUp : isEnd ? figures.arrowDown : ' ';\n    let title = hovered ? color.cyan().underline(v.title) : v.title;\n    prefix = (hovered ? color.cyan(figures.pointer) + ' ' : '  ') + prefix;\n\n    if (v.description) {\n      desc = ` - ${v.description}`;\n\n      if (prefix.length + title.length + desc.length >= this.out.columns || v.description.split(/\\r?\\n/).length > 1) {\n        desc = '\\n' + wrap(v.description, {\n          margin: 3,\n          width: this.out.columns\n        });\n      }\n    }\n\n    return prefix + ' ' + title + color.gray(desc || '');\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText));\n    super.render();\n\n    let _entriesToDisplay = entriesToDisplay(this.select, this.choices.length, this.limit),\n        startIndex = _entriesToDisplay.startIndex,\n        endIndex = _entriesToDisplay.endIndex;\n\n    this.outputText = [color.bold(style.symbol(this.done, this.aborted)), color.bold(this.msg), style.delimiter(this.completing), this.done && this.suggestions[this.select] ? this.suggestions[this.select].title : this.rendered = this.transform.render(this.input)].join(' ');\n\n    if (!this.done) {\n      const suggestions = this.suggestions.slice(startIndex, endIndex).map((item, i) => this.renderOption(item, this.select === i + startIndex, i === 0 && startIndex > 0, i + startIndex === endIndex - 1 && endIndex < this.choices.length)).join('\\n');\n      this.outputText += `\\n` + (suggestions || color.gray(this.fallback.title));\n    }\n\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n\n}\n\nmodule.exports = AutocompletePrompt;","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/node_modules/prompts/dist/elements/autocomplete.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","color","require","Prompt","_require","erase","cursor","_require2","style","clear","figures","wrap","entriesToDisplay","getVal","arr","i","title","getTitle","getIndex","valOrTitle","index","findIndex","el","AutocompletePrompt","constructor","opts","msg","message","suggest","choices","initial","select","i18n","noMatches","fallback","suggestions","input","limit","transform","render","scale","bind","complete","fb","_fb","Number","isSafeInteger","parseInt","choice","moveSelect","length","fire","cb","_this","p","completing","map","s","description","l","Math","max","min","reset","abort","aborted","out","write","close","submit","_","c","s1","slice","s2","delete","bell","deleteForward","rendered","first","last","up","down","next","nextPage","prevPage","left","right","renderOption","v","hovered","isStart","isEnd","desc","prefix","arrowUp","arrowDown","cyan","underline","pointer","columns","split","margin","width","gray","closed","firstRender","hide","outputText","_entriesToDisplay","startIndex","endIndex","bold","symbol","delimiter","join","item","line","to","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('sisteransi'),\n      erase = _require.erase,\n      cursor = _require.cursor;\n\nconst _require2 = require('../util'),\n      style = _require2.style,\n      clear = _require2.clear,\n      figures = _require2.figures,\n      wrap = _require2.wrap,\n      entriesToDisplay = _require2.entriesToDisplay;\n\nconst getVal = (arr, i) => arr[i] && (arr[i].value || arr[i].title || arr[i]);\n\nconst getTitle = (arr, i) => arr[i] && (arr[i].title || arr[i].value || arr[i]);\n\nconst getIndex = (arr, valOrTitle) => {\n  const index = arr.findIndex(el => el.value === valOrTitle || el.title === valOrTitle);\n  return index > -1 ? index : undefined;\n};\n/**\n * TextPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of auto-complete choices objects\n * @param {Function} [opts.suggest] Filter function. Defaults to sort by title\n * @param {Number} [opts.limit=10] Max number of results to show\n * @param {Number} [opts.cursor=0] Cursor start position\n * @param {String} [opts.style='default'] Render style\n * @param {String} [opts.fallback] Fallback message - initial to default value\n * @param {String} [opts.initial] Index of the default value\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.noMatches] The no matches found label\n */\n\n\nclass AutocompletePrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.suggest = opts.suggest;\n    this.choices = opts.choices;\n    this.initial = typeof opts.initial === 'number' ? opts.initial : getIndex(opts.choices, opts.initial);\n    this.select = this.initial || opts.cursor || 0;\n    this.i18n = {\n      noMatches: opts.noMatches || 'no matches found'\n    };\n    this.fallback = opts.fallback || this.initial;\n    this.suggestions = [];\n    this.input = '';\n    this.limit = opts.limit || 10;\n    this.cursor = 0;\n    this.transform = style.render(opts.style);\n    this.scale = this.transform.scale;\n    this.render = this.render.bind(this);\n    this.complete = this.complete.bind(this);\n    this.clear = clear('');\n    this.complete(this.render);\n    this.render();\n  }\n\n  set fallback(fb) {\n    this._fb = Number.isSafeInteger(parseInt(fb)) ? parseInt(fb) : fb;\n  }\n\n  get fallback() {\n    let choice;\n    if (typeof this._fb === 'number') choice = this.choices[this._fb];else if (typeof this._fb === 'string') choice = {\n      title: this._fb\n    };\n    return choice || this._fb || {\n      title: this.i18n.noMatches\n    };\n  }\n\n  moveSelect(i) {\n    this.select = i;\n    if (this.suggestions.length > 0) this.value = getVal(this.suggestions, i);else this.value = this.fallback.value;\n    this.fire();\n  }\n\n  complete(cb) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const p = _this.completing = _this.suggest(_this.input, _this.choices);\n\n      const suggestions = yield p;\n      if (_this.completing !== p) return;\n      _this.suggestions = suggestions.map((s, i, arr) => ({\n        title: getTitle(arr, i),\n        value: getVal(arr, i),\n        description: s.description\n      }));\n      _this.completing = false;\n      const l = Math.max(suggestions.length - 1, 0);\n\n      _this.moveSelect(Math.min(l, _this.select));\n\n      cb && cb();\n    })();\n  }\n\n  reset() {\n    this.input = '';\n    this.complete(() => {\n      this.moveSelect(this.initial !== void 0 ? this.initial : 0);\n      this.render();\n    });\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  _(c, key) {\n    let s1 = this.input.slice(0, this.cursor);\n    let s2 = this.input.slice(this.cursor);\n    this.input = `${s1}${c}${s2}`;\n    this.cursor = s1.length + 1;\n    this.complete(this.render);\n    this.render();\n  }\n\n  delete() {\n    if (this.cursor === 0) return this.bell();\n    let s1 = this.input.slice(0, this.cursor - 1);\n    let s2 = this.input.slice(this.cursor);\n    this.input = `${s1}${s2}`;\n    this.complete(this.render);\n    this.cursor = this.cursor - 1;\n    this.render();\n  }\n\n  deleteForward() {\n    if (this.cursor * this.scale >= this.rendered.length) return this.bell();\n    let s1 = this.input.slice(0, this.cursor);\n    let s2 = this.input.slice(this.cursor + 1);\n    this.input = `${s1}${s2}`;\n    this.complete(this.render);\n    this.render();\n  }\n\n  first() {\n    this.moveSelect(0);\n    this.render();\n  }\n\n  last() {\n    this.moveSelect(this.suggestions.length - 1);\n    this.render();\n  }\n\n  up() {\n    if (this.select <= 0) return this.bell();\n    this.moveSelect(this.select - 1);\n    this.render();\n  }\n\n  down() {\n    if (this.select >= this.suggestions.length - 1) return this.bell();\n    this.moveSelect(this.select + 1);\n    this.render();\n  }\n\n  next() {\n    if (this.select === this.suggestions.length - 1) {\n      this.moveSelect(0);\n    } else this.moveSelect(this.select + 1);\n\n    this.render();\n  }\n\n  nextPage() {\n    this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1));\n    this.render();\n  }\n\n  prevPage() {\n    this.moveSelect(Math.max(this.select - this.limit, 0));\n    this.render();\n  }\n\n  left() {\n    if (this.cursor <= 0) return this.bell();\n    this.cursor = this.cursor - 1;\n    this.render();\n  }\n\n  right() {\n    if (this.cursor * this.scale >= this.rendered.length) return this.bell();\n    this.cursor = this.cursor + 1;\n    this.render();\n  }\n\n  renderOption(v, hovered, isStart, isEnd) {\n    let desc;\n    let prefix = isStart ? figures.arrowUp : isEnd ? figures.arrowDown : ' ';\n    let title = hovered ? color.cyan().underline(v.title) : v.title;\n    prefix = (hovered ? color.cyan(figures.pointer) + ' ' : '  ') + prefix;\n\n    if (v.description) {\n      desc = ` - ${v.description}`;\n\n      if (prefix.length + title.length + desc.length >= this.out.columns || v.description.split(/\\r?\\n/).length > 1) {\n        desc = '\\n' + wrap(v.description, {\n          margin: 3,\n          width: this.out.columns\n        });\n      }\n    }\n\n    return prefix + ' ' + title + color.gray(desc || '');\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText));\n    super.render();\n\n    let _entriesToDisplay = entriesToDisplay(this.select, this.choices.length, this.limit),\n        startIndex = _entriesToDisplay.startIndex,\n        endIndex = _entriesToDisplay.endIndex;\n\n    this.outputText = [color.bold(style.symbol(this.done, this.aborted)), color.bold(this.msg), style.delimiter(this.completing), this.done && this.suggestions[this.select] ? this.suggestions[this.select].title : this.rendered = this.transform.render(this.input)].join(' ');\n\n    if (!this.done) {\n      const suggestions = this.suggestions.slice(startIndex, endIndex).map((item, i) => this.renderOption(item, this.select === i + startIndex, i === 0 && startIndex > 0, i + startIndex === endIndex - 1 && endIndex < this.choices.length)).join('\\n');\n      this.outputText += `\\n` + (suggestions || color.gray(this.fallback.title));\n    }\n\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n\n}\n\nmodule.exports = AutocompletePrompt;"]},"metadata":{},"sourceType":"script"}