{"ast":null,"code":"\"use strict\";\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('../util'),\n      style = _require.style,\n      clear = _require.clear;\n\nconst _require2 = require('sisteransi'),\n      cursor = _require2.cursor,\n      erase = _require2.erase;\n/**\n * TogglePrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Boolean} [opts.initial=false] Default value\n * @param {String} [opts.active='no'] Active label\n * @param {String} [opts.inactive='off'] Inactive label\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n */\n\n\nclass TogglePrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.value = !!opts.initial;\n    this.active = opts.active || 'on';\n    this.inactive = opts.inactive || 'off';\n    this.initialValue = this.value;\n    this.render();\n  }\n\n  reset() {\n    this.value = this.initialValue;\n    this.fire();\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  deactivate() {\n    if (this.value === false) return this.bell();\n    this.value = false;\n    this.render();\n  }\n\n  activate() {\n    if (this.value === true) return this.bell();\n    this.value = true;\n    this.render();\n  }\n\n  delete() {\n    this.deactivate();\n  }\n\n  left() {\n    this.deactivate();\n  }\n\n  right() {\n    this.activate();\n  }\n\n  down() {\n    this.deactivate();\n  }\n\n  up() {\n    this.activate();\n  }\n\n  next() {\n    this.value = !this.value;\n    this.fire();\n    this.render();\n  }\n\n  _(c, key) {\n    if (c === ' ') {\n      this.value = !this.value;\n    } else if (c === '1') {\n      this.value = true;\n    } else if (c === '0') {\n      this.value = false;\n    } else return this.bell();\n\n    this.render();\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText));\n    super.render();\n    this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(this.done), this.value ? this.inactive : color.cyan().underline(this.inactive), color.gray('/'), this.value ? color.cyan().underline(this.active) : this.active].join(' ');\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n\n}\n\nmodule.exports = TogglePrompt;","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/node_modules/prompts/dist/elements/toggle.js"],"names":["color","require","Prompt","_require","style","clear","_require2","cursor","erase","TogglePrompt","constructor","opts","msg","message","value","initial","active","inactive","initialValue","render","reset","fire","abort","done","aborted","out","write","close","submit","deactivate","bell","activate","delete","left","right","down","up","next","_","c","key","closed","firstRender","hide","outputText","symbol","bold","delimiter","cyan","underline","gray","join","line","to","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('../util'),\n      style = _require.style,\n      clear = _require.clear;\n\nconst _require2 = require('sisteransi'),\n      cursor = _require2.cursor,\n      erase = _require2.erase;\n/**\n * TogglePrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Boolean} [opts.initial=false] Default value\n * @param {String} [opts.active='no'] Active label\n * @param {String} [opts.inactive='off'] Inactive label\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n */\n\n\nclass TogglePrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.value = !!opts.initial;\n    this.active = opts.active || 'on';\n    this.inactive = opts.inactive || 'off';\n    this.initialValue = this.value;\n    this.render();\n  }\n\n  reset() {\n    this.value = this.initialValue;\n    this.fire();\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  deactivate() {\n    if (this.value === false) return this.bell();\n    this.value = false;\n    this.render();\n  }\n\n  activate() {\n    if (this.value === true) return this.bell();\n    this.value = true;\n    this.render();\n  }\n\n  delete() {\n    this.deactivate();\n  }\n\n  left() {\n    this.deactivate();\n  }\n\n  right() {\n    this.activate();\n  }\n\n  down() {\n    this.deactivate();\n  }\n\n  up() {\n    this.activate();\n  }\n\n  next() {\n    this.value = !this.value;\n    this.fire();\n    this.render();\n  }\n\n  _(c, key) {\n    if (c === ' ') {\n      this.value = !this.value;\n    } else if (c === '1') {\n      this.value = true;\n    } else if (c === '0') {\n      this.value = false;\n    } else return this.bell();\n\n    this.render();\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText));\n    super.render();\n    this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(this.done), this.value ? this.inactive : color.cyan().underline(this.inactive), color.gray('/'), this.value ? color.cyan().underline(this.active) : this.active].join(' ');\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n\n}\n\nmodule.exports = TogglePrompt;"]},"metadata":{},"sourceType":"script"}