{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/src/components/Questions.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { questionsRequest } from '../actions';\n\nclass Questions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questionIndex: 0,\n      isLoad: false,\n      questions: []\n    };\n  }\n\n  async componentDidMount() {\n    const requestQuestions = this.props.requestQuestions;\n    const token = localStorage.getItem('token');\n    await requestQuestions(token);\n  }\n\n  render() {\n    const questionIndex = this.state.questionIndex;\n    const questions = this.props.questions;\n    const results = questions.results;\n    const questionList = questions ? results : []; // const listLength = 5;\n    // return questionList !== listLength ? 'Loading' : (\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, questionList.filter((question, index) => {\n      if (questionIndex === index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          \"data-testid\": \"question-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, question.name), React.createElement(\"p\", {\n          \"data-testid\": \"question-category\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, question.category));\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  questions: state.triviaReducer.questions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestQuestions: token => dispatch(questionsRequest(token))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/src/components/Questions.jsx"],"names":["React","Component","connect","questionsRequest","Questions","constructor","state","questionIndex","isLoad","questions","componentDidMount","requestQuestions","props","token","localStorage","getItem","render","results","questionList","filter","question","index","name","category","mapStateToProps","triviaReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,CADJ;AAEXC,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKD;;AAED,QAAMC,iBAAN,GAA0B;AAAA,UAChBC,gBADgB,GACK,KAAKC,KADV,CAChBD,gBADgB;AAExB,UAAME,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,UAAMJ,gBAAgB,CAACE,KAAD,CAAtB;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACCT,aADD,GACmB,KAAKD,KADxB,CACCC,aADD;AAAA,UAECE,SAFD,GAEe,KAAKG,KAFpB,CAECH,SAFD;AAAA,UAGCQ,OAHD,GAGaR,SAHb,CAGCQ,OAHD;AAKP,UAAMC,YAAY,GAAGT,SAAS,GAAGQ,OAAH,GAAa,EAA3C,CALO,CAMP;AAEA;;AACF,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,YAAY,CAACC,MAAb,CAAoB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzC,UAAId,aAAa,KAAKc,KAAtB,EAA6B;AAC3B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,yBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiCD,QAAQ,CAACE,IAA1C,CADF,EAEE;AAAG,yBAAY,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCF,QAAQ,CAACG,QAA7C,CAFF,CADF;AAMD;AACF,KATC,CADJ,CADJ;AAcC;;AA1C+B;;AA6ClC,MAAMC,eAAe,GAAIlB,KAAD,KAAY;AAClCG,EAAAA,SAAS,EAAEH,KAAK,CAACmB,aAAN,CAAoBhB;AADG,CAAZ,CAAxB;;AAIA,MAAMiB,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,gBAAgB,EAAGE,KAAD,IAAWc,QAAQ,CAACxB,gBAAgB,CAACU,KAAD,CAAjB;AADG,CAAf,CAA3B;;AAIA,eAAeX,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { questionsRequest } from '../actions';\n\nclass Questions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questionIndex: 0,\n      isLoad: false,\n      questions: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { requestQuestions } = this.props;\n    const token = localStorage.getItem('token');\n\n    await requestQuestions(token);\n\n\n  }\n\n  render() {\n    const { questionIndex } = this.state;\n    const { questions } = this.props;\n    const { results } = questions;\n\n    const questionList = questions ? results : [];\n    // const listLength = 5;\n\n    // return questionList !== listLength ? 'Loading' : (\n  return (\n      <div>\n        { questionList.filter((question, index) => {\n          if (questionIndex === index) {\n            return (\n              <div>\n                <p data-testid=\"question-text\">{ question.name }</p>\n                <p data-testid=\"question-category\">{question.category}</p>\n              </div>\n            );\n          }\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questions: state.triviaReducer.questions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestQuestions: (token) => dispatch(questionsRequest(token)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}