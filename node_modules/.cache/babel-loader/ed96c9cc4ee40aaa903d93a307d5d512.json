{"ast":null,"code":"'use strict';\n/**\n * Determine what entries should be displayed on the screen, based on the\n * currently selected index and the maximum visible. Used in list-based\n * prompts like `select` and `multiselect`.\n *\n * @param {number} cursor the currently selected entry\n * @param {number} total the total entries available to display\n * @param {number} [maxVisible] the number of entries that can be displayed\n */\n\nmodule.exports = (cursor, total, maxVisible) => {\n  maxVisible = maxVisible || total;\n  let startIndex = Math.min(total - maxVisible, cursor - Math.floor(maxVisible / 2));\n  if (startIndex < 0) startIndex = 0;\n  let endIndex = Math.min(startIndex + maxVisible, total);\n  return {\n    startIndex,\n    endIndex\n  };\n};","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/node_modules/prompts/lib/util/entriesToDisplay.js"],"names":["module","exports","cursor","total","maxVisible","startIndex","Math","min","floor","endIndex"],"mappings":"AAAA;AAEA;;;;;;;;;;AASAA,MAAM,CAACC,OAAP,GAAiB,CAACC,MAAD,EAASC,KAAT,EAAgBC,UAAhB,KAAgC;AAC/CA,EAAAA,UAAU,GAAGA,UAAU,IAAID,KAA3B;AAEA,MAAIE,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASJ,KAAK,GAAEC,UAAhB,EAA4BF,MAAM,GAAGI,IAAI,CAACE,KAAL,CAAWJ,UAAU,GAAG,CAAxB,CAArC,CAAjB;AACA,MAAIC,UAAU,GAAG,CAAjB,EAAoBA,UAAU,GAAG,CAAb;AAEpB,MAAII,QAAQ,GAAGH,IAAI,CAACC,GAAL,CAASF,UAAU,GAAGD,UAAtB,EAAkCD,KAAlC,CAAf;AAEA,SAAO;AAAEE,IAAAA,UAAF;AAAcI,IAAAA;AAAd,GAAP;AACD,CATD","sourcesContent":["'use strict';\n\n/**\n * Determine what entries should be displayed on the screen, based on the\n * currently selected index and the maximum visible. Used in list-based\n * prompts like `select` and `multiselect`.\n *\n * @param {number} cursor the currently selected entry\n * @param {number} total the total entries available to display\n * @param {number} [maxVisible] the number of entries that can be displayed\n */\nmodule.exports = (cursor, total, maxVisible)  => {\n  maxVisible = maxVisible || total;\n\n  let startIndex = Math.min(total- maxVisible, cursor - Math.floor(maxVisible / 2));\n  if (startIndex < 0) startIndex = 0;\n\n  let endIndex = Math.min(startIndex + maxVisible, total);\n\n  return { startIndex, endIndex };\n};\n"]},"metadata":{},"sourceType":"script"}