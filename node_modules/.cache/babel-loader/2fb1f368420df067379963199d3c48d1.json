{"ast":null,"code":"const color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('sisteransi'),\n      erase = _require.erase,\n      cursor = _require.cursor;\n\nconst _require2 = require('../util'),\n      style = _require2.style,\n      clear = _require2.clear,\n      lines = _require2.lines,\n      figures = _require2.figures;\n/**\n * TextPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {String} [opts.style='default'] Render style\n * @param {String} [opts.initial] Default value\n * @param {Function} [opts.validate] Validate function\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.error] The invalid error label\n */\n\n\nclass TextPrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.transform = style.render(opts.style);\n    this.scale = this.transform.scale;\n    this.msg = opts.message;\n    this.initial = opts.initial || ``;\n\n    this.validator = opts.validate || (() => true);\n\n    this.value = ``;\n    this.errorMsg = opts.error || `Please Enter A Valid Value`;\n    this.cursor = Number(!!this.initial);\n    this.clear = clear(``);\n    this.render();\n  }\n\n  set value(v) {\n    if (!v && this.initial) {\n      this.placeholder = true;\n      this.rendered = color.gray(this.transform.render(this.initial));\n    } else {\n      this.placeholder = false;\n      this.rendered = this.transform.render(v);\n    }\n\n    this._value = v;\n    this.fire();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  reset() {\n    this.value = ``;\n    this.cursor = Number(!!this.initial);\n    this.fire();\n    this.render();\n  }\n\n  abort() {\n    this.value = this.value || this.initial;\n    this.done = this.aborted = true;\n    this.error = false;\n    this.red = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  async validate() {\n    let valid = await this.validator(this.value);\n\n    if (typeof valid === `string`) {\n      this.errorMsg = valid;\n      valid = false;\n    }\n\n    this.error = !valid;\n  }\n\n  async submit() {\n    this.value = this.value || this.initial;\n    await this.validate();\n\n    if (this.error) {\n      this.red = true;\n      this.fire();\n      this.render();\n      return;\n    }\n\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  next() {\n    if (!this.placeholder) return this.bell();\n    this.value = this.initial;\n    this.cursor = this.rendered.length;\n    this.fire();\n    this.render();\n  }\n\n  moveCursor(n) {\n    if (this.placeholder) return;\n    this.cursor = this.cursor + n;\n  }\n\n  _(c, key) {\n    let s1 = this.value.slice(0, this.cursor);\n    let s2 = this.value.slice(this.cursor);\n    this.value = `${s1}${c}${s2}`;\n    this.red = false;\n    this.cursor = this.placeholder ? 0 : s1.length + 1;\n    this.render();\n  }\n\n  delete() {\n    if (this.cursor === 0) return this.bell();\n    let s1 = this.value.slice(0, this.cursor - 1);\n    let s2 = this.value.slice(this.cursor);\n    this.value = `${s1}${s2}`;\n    this.red = false;\n    this.moveCursor(-1);\n    this.render();\n  }\n\n  deleteForward() {\n    if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();\n    let s1 = this.value.slice(0, this.cursor);\n    let s2 = this.value.slice(this.cursor + 1);\n    this.value = `${s1}${s2}`;\n    this.red = false;\n    this.render();\n  }\n\n  first() {\n    this.cursor = 0;\n    this.render();\n  }\n\n  last() {\n    this.cursor = this.value.length;\n    this.render();\n  }\n\n  left() {\n    if (this.cursor <= 0 || this.placeholder) return this.bell();\n    this.moveCursor(-1);\n    this.render();\n  }\n\n  right() {\n    if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();\n    this.moveCursor(1);\n    this.render();\n  }\n\n  render() {\n    if (this.closed) return;\n\n    if (!this.firstRender) {\n      if (this.outputError) this.out.write(cursor.down(lines(this.outputError) - 1) + clear(this.outputError));\n      this.out.write(clear(this.outputText));\n    }\n\n    super.render();\n    this.outputError = '';\n    this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(this.done), this.red ? color.red(this.rendered) : this.rendered].join(` `);\n\n    if (this.error) {\n      this.outputError += this.errorMsg.split(`\\n`).reduce((a, l, i) => a + `\\n${i ? ' ' : figures.pointerSmall} ${color.red().italic(l)}`, ``);\n    }\n\n    this.out.write(erase.line + cursor.to(0) + this.outputText + cursor.save + this.outputError + cursor.restore);\n  }\n\n}\n\nmodule.exports = TextPrompt;","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/node_modules/prompts/lib/elements/text.js"],"names":["color","require","Prompt","erase","cursor","style","clear","lines","figures","TextPrompt","constructor","opts","transform","render","scale","msg","message","initial","validator","validate","value","errorMsg","error","Number","v","placeholder","rendered","gray","_value","fire","reset","abort","done","aborted","red","out","write","close","valid","submit","next","bell","length","moveCursor","n","_","c","key","s1","slice","s2","delete","deleteForward","first","last","left","right","closed","firstRender","outputError","down","outputText","symbol","bold","delimiter","join","split","reduce","a","l","i","pointerSmall","italic","line","to","save","restore","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;iBAC0BA,OAAO,CAAC,YAAD,C;MAAzBE,K,YAAAA,K;MAAOC,M,YAAAA,M;;kBAC0BH,OAAO,CAAC,SAAD,C;MAAxCI,K,aAAAA,K;MAAOC,K,aAAAA,K;MAAOC,K,aAAAA,K;MAAOC,O,aAAAA,O;AAE7B;;;;;;;;;;;;;AAWA,MAAMC,UAAN,SAAyBP,MAAzB,CAAgC;AAC9BQ,EAAAA,WAAW,CAACC,IAAI,GAAC,EAAN,EAAU;AACnB,UAAMA,IAAN;AACA,SAAKC,SAAL,GAAiBP,KAAK,CAACQ,MAAN,CAAaF,IAAI,CAACN,KAAlB,CAAjB;AACA,SAAKS,KAAL,GAAa,KAAKF,SAAL,CAAeE,KAA5B;AACA,SAAKC,GAAL,GAAWJ,IAAI,CAACK,OAAhB;AACA,SAAKC,OAAL,GAAeN,IAAI,CAACM,OAAL,IAAiB,EAAhC;;AACA,SAAKC,SAAL,GAAiBP,IAAI,CAACQ,QAAL,KAAkB,MAAM,IAAxB,CAAjB;;AACA,SAAKC,KAAL,GAAc,EAAd;AACA,SAAKC,QAAL,GAAgBV,IAAI,CAACW,KAAL,IAAe,4BAA/B;AACA,SAAKlB,MAAL,GAAcmB,MAAM,CAAC,CAAC,CAAC,KAAKN,OAAR,CAApB;AACA,SAAKX,KAAL,GAAaA,KAAK,CAAE,EAAF,CAAlB;AACA,SAAKO,MAAL;AACD;;AAED,MAAIO,KAAJ,CAAUI,CAAV,EAAa;AACX,QAAI,CAACA,CAAD,IAAM,KAAKP,OAAf,EAAwB;AACtB,WAAKQ,WAAL,GAAmB,IAAnB;AACA,WAAKC,QAAL,GAAgB1B,KAAK,CAAC2B,IAAN,CAAW,KAAKf,SAAL,CAAeC,MAAf,CAAsB,KAAKI,OAA3B,CAAX,CAAhB;AACD,KAHD,MAGO;AACL,WAAKQ,WAAL,GAAmB,KAAnB;AACA,WAAKC,QAAL,GAAgB,KAAKd,SAAL,CAAeC,MAAf,CAAsBW,CAAtB,CAAhB;AACD;;AACD,SAAKI,MAAL,GAAcJ,CAAd;AACA,SAAKK,IAAL;AACD;;AAED,MAAIT,KAAJ,GAAY;AACV,WAAO,KAAKQ,MAAZ;AACD;;AAEDE,EAAAA,KAAK,GAAG;AACN,SAAKV,KAAL,GAAc,EAAd;AACA,SAAKhB,MAAL,GAAcmB,MAAM,CAAC,CAAC,CAAC,KAAKN,OAAR,CAApB;AACA,SAAKY,IAAL;AACA,SAAKhB,MAAL;AACD;;AAEDkB,EAAAA,KAAK,GAAG;AACN,SAAKX,KAAL,GAAa,KAAKA,KAAL,IAAc,KAAKH,OAAhC;AACA,SAAKe,IAAL,GAAY,KAAKC,OAAL,GAAe,IAA3B;AACA,SAAKX,KAAL,GAAa,KAAb;AACA,SAAKY,GAAL,GAAW,KAAX;AACA,SAAKL,IAAL;AACA,SAAKhB,MAAL;AACA,SAAKsB,GAAL,CAASC,KAAT,CAAe,IAAf;AACA,SAAKC,KAAL;AACD;;AAED,QAAMlB,QAAN,GAAiB;AACf,QAAImB,KAAK,GAAG,MAAM,KAAKpB,SAAL,CAAe,KAAKE,KAApB,CAAlB;;AACA,QAAI,OAAOkB,KAAP,KAAkB,QAAtB,EAA+B;AAC7B,WAAKjB,QAAL,GAAgBiB,KAAhB;AACAA,MAAAA,KAAK,GAAG,KAAR;AACD;;AACD,SAAKhB,KAAL,GAAa,CAACgB,KAAd;AACD;;AAED,QAAMC,MAAN,GAAe;AACb,SAAKnB,KAAL,GAAa,KAAKA,KAAL,IAAc,KAAKH,OAAhC;AACA,UAAM,KAAKE,QAAL,EAAN;;AACA,QAAI,KAAKG,KAAT,EAAgB;AACd,WAAKY,GAAL,GAAW,IAAX;AACA,WAAKL,IAAL;AACA,WAAKhB,MAAL;AACA;AACD;;AACD,SAAKmB,IAAL,GAAY,IAAZ;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKJ,IAAL;AACA,SAAKhB,MAAL;AACA,SAAKsB,GAAL,CAASC,KAAT,CAAe,IAAf;AACA,SAAKC,KAAL;AACD;;AAEDG,EAAAA,IAAI,GAAG;AACL,QAAI,CAAC,KAAKf,WAAV,EAAuB,OAAO,KAAKgB,IAAL,EAAP;AACvB,SAAKrB,KAAL,GAAa,KAAKH,OAAlB;AACA,SAAKb,MAAL,GAAc,KAAKsB,QAAL,CAAcgB,MAA5B;AACA,SAAKb,IAAL;AACA,SAAKhB,MAAL;AACD;;AAED8B,EAAAA,UAAU,CAACC,CAAD,EAAI;AACZ,QAAI,KAAKnB,WAAT,EAAsB;AACtB,SAAKrB,MAAL,GAAc,KAAKA,MAAL,GAAYwC,CAA1B;AACD;;AAEDC,EAAAA,CAAC,CAACC,CAAD,EAAIC,GAAJ,EAAS;AACR,QAAIC,EAAE,GAAG,KAAK5B,KAAL,CAAW6B,KAAX,CAAiB,CAAjB,EAAoB,KAAK7C,MAAzB,CAAT;AACA,QAAI8C,EAAE,GAAG,KAAK9B,KAAL,CAAW6B,KAAX,CAAiB,KAAK7C,MAAtB,CAAT;AACA,SAAKgB,KAAL,GAAc,GAAE4B,EAAG,GAAEF,CAAE,GAAEI,EAAG,EAA5B;AACA,SAAKhB,GAAL,GAAW,KAAX;AACA,SAAK9B,MAAL,GAAc,KAAKqB,WAAL,GAAmB,CAAnB,GAAuBuB,EAAE,CAACN,MAAH,GAAU,CAA/C;AACA,SAAK7B,MAAL;AACD;;AAEDsC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK/C,MAAL,KAAgB,CAApB,EAAuB,OAAO,KAAKqC,IAAL,EAAP;AACvB,QAAIO,EAAE,GAAG,KAAK5B,KAAL,CAAW6B,KAAX,CAAiB,CAAjB,EAAoB,KAAK7C,MAAL,GAAY,CAAhC,CAAT;AACA,QAAI8C,EAAE,GAAG,KAAK9B,KAAL,CAAW6B,KAAX,CAAiB,KAAK7C,MAAtB,CAAT;AACA,SAAKgB,KAAL,GAAc,GAAE4B,EAAG,GAAEE,EAAG,EAAxB;AACA,SAAKhB,GAAL,GAAW,KAAX;AACA,SAAKS,UAAL,CAAgB,CAAC,CAAjB;AACA,SAAK9B,MAAL;AACD;;AAEDuC,EAAAA,aAAa,GAAG;AACd,QAAG,KAAKhD,MAAL,GAAY,KAAKU,KAAjB,IAA0B,KAAKY,QAAL,CAAcgB,MAAxC,IAAkD,KAAKjB,WAA1D,EAAuE,OAAO,KAAKgB,IAAL,EAAP;AACvE,QAAIO,EAAE,GAAG,KAAK5B,KAAL,CAAW6B,KAAX,CAAiB,CAAjB,EAAoB,KAAK7C,MAAzB,CAAT;AACA,QAAI8C,EAAE,GAAG,KAAK9B,KAAL,CAAW6B,KAAX,CAAiB,KAAK7C,MAAL,GAAY,CAA7B,CAAT;AACA,SAAKgB,KAAL,GAAc,GAAE4B,EAAG,GAAEE,EAAG,EAAxB;AACA,SAAKhB,GAAL,GAAW,KAAX;AACA,SAAKrB,MAAL;AACD;;AAEDwC,EAAAA,KAAK,GAAG;AACN,SAAKjD,MAAL,GAAc,CAAd;AACA,SAAKS,MAAL;AACD;;AAEDyC,EAAAA,IAAI,GAAG;AACL,SAAKlD,MAAL,GAAc,KAAKgB,KAAL,CAAWsB,MAAzB;AACA,SAAK7B,MAAL;AACD;;AAED0C,EAAAA,IAAI,GAAG;AACL,QAAI,KAAKnD,MAAL,IAAe,CAAf,IAAoB,KAAKqB,WAA7B,EAA0C,OAAO,KAAKgB,IAAL,EAAP;AAC1C,SAAKE,UAAL,CAAgB,CAAC,CAAjB;AACA,SAAK9B,MAAL;AACD;;AAED2C,EAAAA,KAAK,GAAG;AACN,QAAI,KAAKpD,MAAL,GAAY,KAAKU,KAAjB,IAA0B,KAAKY,QAAL,CAAcgB,MAAxC,IAAkD,KAAKjB,WAA3D,EAAwE,OAAO,KAAKgB,IAAL,EAAP;AACxE,SAAKE,UAAL,CAAgB,CAAhB;AACA,SAAK9B,MAAL;AACD;;AAEDA,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK4C,MAAT,EAAiB;;AACjB,QAAI,CAAC,KAAKC,WAAV,EAAuB;AACrB,UAAI,KAAKC,WAAT,EACE,KAAKxB,GAAL,CAASC,KAAT,CAAehC,MAAM,CAACwD,IAAP,CAAYrD,KAAK,CAAC,KAAKoD,WAAN,CAAL,GAA0B,CAAtC,IAA2CrD,KAAK,CAAC,KAAKqD,WAAN,CAA/D;AACF,WAAKxB,GAAL,CAASC,KAAT,CAAe9B,KAAK,CAAC,KAAKuD,UAAN,CAApB;AACD;;AACD,UAAMhD,MAAN;AACA,SAAK8C,WAAL,GAAmB,EAAnB;AAEA,SAAKE,UAAL,GAAkB,CAChBxD,KAAK,CAACyD,MAAN,CAAa,KAAK9B,IAAlB,EAAwB,KAAKC,OAA7B,CADgB,EAEhBjC,KAAK,CAAC+D,IAAN,CAAW,KAAKhD,GAAhB,CAFgB,EAGhBV,KAAK,CAAC2D,SAAN,CAAgB,KAAKhC,IAArB,CAHgB,EAIhB,KAAKE,GAAL,GAAWlC,KAAK,CAACkC,GAAN,CAAU,KAAKR,QAAf,CAAX,GAAsC,KAAKA,QAJ3B,EAKhBuC,IALgB,CAKV,GALU,CAAlB;;AAOA,QAAI,KAAK3C,KAAT,EAAgB;AACd,WAAKqC,WAAL,IAAoB,KAAKtC,QAAL,CAAc6C,KAAd,CAAqB,IAArB,EACfC,MADe,CACR,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAaF,CAAC,GAAI,KAAIE,CAAC,GAAG,GAAH,GAAS9D,OAAO,CAAC+D,YAAa,IAAGvE,KAAK,CAACkC,GAAN,GAAYsC,MAAZ,CAAmBH,CAAnB,CAAsB,EADtE,EAC0E,EAD1E,CAApB;AAED;;AAED,SAAKlC,GAAL,CAASC,KAAT,CAAejC,KAAK,CAACsE,IAAN,GAAarE,MAAM,CAACsE,EAAP,CAAU,CAAV,CAAb,GAA4B,KAAKb,UAAjC,GAA8CzD,MAAM,CAACuE,IAArD,GAA4D,KAAKhB,WAAjE,GAA+EvD,MAAM,CAACwE,OAArG;AACD;;AAjK6B;;AAoKhCC,MAAM,CAACC,OAAP,GAAiBrE,UAAjB","sourcesContent":["const color = require('kleur');\nconst Prompt = require('./prompt');\nconst { erase, cursor } = require('sisteransi');\nconst { style, clear, lines, figures } = require('../util');\n\n/**\n * TextPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {String} [opts.style='default'] Render style\n * @param {String} [opts.initial] Default value\n * @param {Function} [opts.validate] Validate function\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.error] The invalid error label\n */\nclass TextPrompt extends Prompt {\n  constructor(opts={}) {\n    super(opts);\n    this.transform = style.render(opts.style);\n    this.scale = this.transform.scale;\n    this.msg = opts.message;\n    this.initial = opts.initial || ``;\n    this.validator = opts.validate || (() => true);\n    this.value = ``;\n    this.errorMsg = opts.error || `Please Enter A Valid Value`;\n    this.cursor = Number(!!this.initial);\n    this.clear = clear(``);\n    this.render();\n  }\n\n  set value(v) {\n    if (!v && this.initial) {\n      this.placeholder = true;\n      this.rendered = color.gray(this.transform.render(this.initial));\n    } else {\n      this.placeholder = false;\n      this.rendered = this.transform.render(v);\n    }\n    this._value = v;\n    this.fire();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  reset() {\n    this.value = ``;\n    this.cursor = Number(!!this.initial);\n    this.fire();\n    this.render();\n  }\n\n  abort() {\n    this.value = this.value || this.initial;\n    this.done = this.aborted = true;\n    this.error = false;\n    this.red = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  async validate() {\n    let valid = await this.validator(this.value);\n    if (typeof valid === `string`) {\n      this.errorMsg = valid;\n      valid = false;\n    }\n    this.error = !valid;\n  }\n\n  async submit() {\n    this.value = this.value || this.initial;\n    await this.validate();\n    if (this.error) {\n      this.red = true;\n      this.fire();\n      this.render();\n      return;\n    }\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  next() {\n    if (!this.placeholder) return this.bell();\n    this.value = this.initial;\n    this.cursor = this.rendered.length;\n    this.fire();\n    this.render();\n  }\n\n  moveCursor(n) {\n    if (this.placeholder) return;\n    this.cursor = this.cursor+n;\n  }\n\n  _(c, key) {\n    let s1 = this.value.slice(0, this.cursor);\n    let s2 = this.value.slice(this.cursor);\n    this.value = `${s1}${c}${s2}`;\n    this.red = false;\n    this.cursor = this.placeholder ? 0 : s1.length+1;\n    this.render();\n  }\n\n  delete() {\n    if (this.cursor === 0) return this.bell();\n    let s1 = this.value.slice(0, this.cursor-1);\n    let s2 = this.value.slice(this.cursor);\n    this.value = `${s1}${s2}`;\n    this.red = false;\n    this.moveCursor(-1);\n    this.render();\n  }\n\n  deleteForward() {\n    if(this.cursor*this.scale >= this.rendered.length || this.placeholder) return this.bell();\n    let s1 = this.value.slice(0, this.cursor);\n    let s2 = this.value.slice(this.cursor+1);\n    this.value = `${s1}${s2}`;\n    this.red = false;\n    this.render();\n  }\n\n  first() {\n    this.cursor = 0;\n    this.render();\n  }\n\n  last() {\n    this.cursor = this.value.length;\n    this.render();\n  }\n\n  left() {\n    if (this.cursor <= 0 || this.placeholder) return this.bell();\n    this.moveCursor(-1);\n    this.render();\n  }\n\n  right() {\n    if (this.cursor*this.scale >= this.rendered.length || this.placeholder) return this.bell();\n    this.moveCursor(1);\n    this.render();\n  }\n\n  render() {\n    if (this.closed) return;\n    if (!this.firstRender) {\n      if (this.outputError)\n        this.out.write(cursor.down(lines(this.outputError) - 1) + clear(this.outputError));\n      this.out.write(clear(this.outputText));\n    }\n    super.render();\n    this.outputError = '';\n\n    this.outputText = [\n      style.symbol(this.done, this.aborted),\n      color.bold(this.msg),\n      style.delimiter(this.done),\n      this.red ? color.red(this.rendered) : this.rendered\n    ].join(` `);\n\n    if (this.error) {\n      this.outputError += this.errorMsg.split(`\\n`)\n          .reduce((a, l, i) => a + `\\n${i ? ' ' : figures.pointerSmall} ${color.red().italic(l)}`, ``);\n    }\n\n    this.out.write(erase.line + cursor.to(0) + this.outputText + cursor.save + this.outputError + cursor.restore);\n  }\n}\n\nmodule.exports = TextPrompt;\n"]},"metadata":{},"sourceType":"script"}