{"ast":null,"code":"'use strict';\n\nconst color = require('kleur');\n\nconst _require = require('sisteransi'),\n      cursor = _require.cursor;\n\nconst Prompt = require('./prompt');\n\nconst _require2 = require('../util'),\n      clear = _require2.clear,\n      figures = _require2.figures,\n      style = _require2.style,\n      wrap = _require2.wrap,\n      entriesToDisplay = _require2.entriesToDisplay;\n/**\n * MultiselectPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of choice objects\n * @param {String} [opts.hint] Hint to display\n * @param {String} [opts.warn] Hint shown for disabled choices\n * @param {Number} [opts.max] Max choices\n * @param {Number} [opts.cursor=0] Cursor start position\n * @param {Number} [opts.optionsPerPage=10] Max options to display at once\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n */\n\n\nclass MultiselectPrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.cursor = opts.cursor || 0;\n    this.scrollIndex = opts.cursor || 0;\n    this.hint = opts.hint || '';\n    this.warn = opts.warn || '- This option is disabled -';\n    this.minSelected = opts.min;\n    this.showMinError = false;\n    this.maxChoices = opts.max;\n    this.instructions = opts.instructions;\n    this.optionsPerPage = opts.optionsPerPage || 10;\n    this.value = opts.choices.map((ch, idx) => {\n      if (typeof ch === 'string') ch = {\n        title: ch,\n        value: idx\n      };\n      return {\n        title: ch && (ch.title || ch.value || ch),\n        description: ch && ch.description,\n        value: ch && (ch.value === undefined ? idx : ch.value),\n        selected: ch && ch.selected,\n        disabled: ch && ch.disabled\n      };\n    });\n    this.clear = clear('');\n\n    if (!opts.overrideRender) {\n      this.render();\n    }\n  }\n\n  reset() {\n    this.value.map(v => !v.selected);\n    this.cursor = 0;\n    this.fire();\n    this.render();\n  }\n\n  selected() {\n    return this.value.filter(v => v.selected);\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    const selected = this.value.filter(e => e.selected);\n\n    if (this.minSelected && selected.length < this.minSelected) {\n      this.showMinError = true;\n      this.render();\n    } else {\n      this.done = true;\n      this.aborted = false;\n      this.fire();\n      this.render();\n      this.out.write('\\n');\n      this.close();\n    }\n  }\n\n  first() {\n    this.cursor = 0;\n    this.render();\n  }\n\n  last() {\n    this.cursor = this.value.length - 1;\n    this.render();\n  }\n\n  next() {\n    this.cursor = (this.cursor + 1) % this.value.length;\n    this.render();\n  }\n\n  up() {\n    if (this.cursor === 0) {\n      this.cursor = this.value.length - 1;\n    } else {\n      this.cursor--;\n    }\n\n    this.render();\n  }\n\n  down() {\n    if (this.cursor === this.value.length - 1) {\n      this.cursor = 0;\n    } else {\n      this.cursor++;\n    }\n\n    this.render();\n  }\n\n  left() {\n    this.value[this.cursor].selected = false;\n    this.render();\n  }\n\n  right() {\n    if (this.value.filter(e => e.selected).length >= this.maxChoices) return this.bell();\n    this.value[this.cursor].selected = true;\n    this.render();\n  }\n\n  handleSpaceToggle() {\n    const v = this.value[this.cursor];\n\n    if (v.selected) {\n      v.selected = false;\n      this.render();\n    } else if (v.disabled || this.value.filter(e => e.selected).length >= this.maxChoices) {\n      return this.bell();\n    } else {\n      v.selected = true;\n      this.render();\n    }\n  }\n\n  toggleAll() {\n    if (this.maxChoices !== undefined || this.value[this.cursor].disabled) {\n      return this.bell();\n    }\n\n    const newSelected = !this.value[this.cursor].selected;\n    this.value.filter(v => !v.disabled).forEach(v => v.selected = newSelected);\n    this.render();\n  }\n\n  _(c, key) {\n    if (c === ' ') {\n      this.handleSpaceToggle();\n    } else if (c === 'a') {\n      this.toggleAll();\n    } else {\n      return this.bell();\n    }\n  }\n\n  renderInstructions() {\n    if (this.instructions === undefined || this.instructions) {\n      if (typeof this.instructions === 'string') {\n        return this.instructions;\n      }\n\n      return '\\nInstructions:\\n' + `    ${figures.arrowUp}/${figures.arrowDown}: Highlight option\\n` + `    ${figures.arrowLeft}/${figures.arrowRight}/[space]: Toggle selection\\n` + (this.maxChoices === undefined ? `    a: Toggle all\\n` : '') + `    enter/return: Complete answer`;\n    }\n\n    return '';\n  }\n\n  renderOption(cursor, v, i, arrowIndicator) {\n    const prefix = (v.selected ? color.green(figures.radioOn) : figures.radioOff) + ' ' + arrowIndicator + ' ';\n    let title, desc;\n\n    if (v.disabled) {\n      title = cursor === i ? color.gray().underline(v.title) : color.strikethrough().gray(v.title);\n    } else {\n      title = cursor === i ? color.cyan().underline(v.title) : v.title;\n\n      if (cursor === i && v.description) {\n        desc = ` - ${v.description}`;\n\n        if (prefix.length + title.length + desc.length >= this.out.columns || v.description.split(/\\r?\\n/).length > 1) {\n          desc = '\\n' + wrap(v.description, {\n            margin: prefix.length,\n            width: this.out.columns\n          });\n        }\n      }\n    }\n\n    return prefix + title + color.gray(desc || '');\n  } // shared with autocompleteMultiselect\n\n\n  paginateOptions(options) {\n    if (options.length === 0) {\n      return color.red('No matches for this query.');\n    }\n\n    let _entriesToDisplay = entriesToDisplay(this.cursor, options.length, this.optionsPerPage),\n        startIndex = _entriesToDisplay.startIndex,\n        endIndex = _entriesToDisplay.endIndex;\n\n    let prefix,\n        styledOptions = [];\n\n    for (let i = startIndex; i < endIndex; i++) {\n      if (i === startIndex && startIndex > 0) {\n        prefix = figures.arrowUp;\n      } else if (i === endIndex - 1 && endIndex < options.length) {\n        prefix = figures.arrowDown;\n      } else {\n        prefix = ' ';\n      }\n\n      styledOptions.push(this.renderOption(this.cursor, options[i], i, prefix));\n    }\n\n    return '\\n' + styledOptions.join('\\n');\n  } // shared with autocomleteMultiselect\n\n\n  renderOptions(options) {\n    if (!this.done) {\n      return this.paginateOptions(options);\n    }\n\n    return '';\n  }\n\n  renderDoneOrInstructions() {\n    if (this.done) {\n      return this.value.filter(e => e.selected).map(v => v.title).join(', ');\n    }\n\n    const output = [color.gray(this.hint), this.renderInstructions()];\n\n    if (this.value[this.cursor].disabled) {\n      output.push(color.yellow(this.warn));\n    }\n\n    return output.join(' ');\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);\n    super.render(); // print prompt\n\n    let prompt = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(false), this.renderDoneOrInstructions()].join(' ');\n\n    if (this.showMinError) {\n      prompt += color.red(`You must select a minimum of ${this.minSelected} choices.`);\n      this.showMinError = false;\n    }\n\n    prompt += this.renderOptions(this.value);\n    this.out.write(this.clear + prompt);\n    this.clear = clear(prompt);\n  }\n\n}\n\nmodule.exports = MultiselectPrompt;","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/node_modules/prompts/dist/elements/multiselect.js"],"names":["color","require","_require","cursor","Prompt","_require2","clear","figures","style","wrap","entriesToDisplay","MultiselectPrompt","constructor","opts","msg","message","scrollIndex","hint","warn","minSelected","min","showMinError","maxChoices","max","instructions","optionsPerPage","value","choices","map","ch","idx","title","description","undefined","selected","disabled","overrideRender","render","reset","v","fire","filter","abort","done","aborted","out","write","close","submit","e","length","first","last","next","up","down","left","right","bell","handleSpaceToggle","toggleAll","newSelected","forEach","_","c","key","renderInstructions","arrowUp","arrowDown","arrowLeft","arrowRight","renderOption","i","arrowIndicator","prefix","green","radioOn","radioOff","desc","gray","underline","strikethrough","cyan","columns","split","margin","width","paginateOptions","options","red","_entriesToDisplay","startIndex","endIndex","styledOptions","push","join","renderOptions","renderDoneOrInstructions","output","yellow","closed","firstRender","hide","prompt","symbol","bold","delimiter","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAxB;AAAA,MACME,MAAM,GAAGD,QAAQ,CAACC,MADxB;;AAGA,MAAMC,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,SAAD,CAAzB;AAAA,MACMK,KAAK,GAAGD,SAAS,CAACC,KADxB;AAAA,MAEMC,OAAO,GAAGF,SAAS,CAACE,OAF1B;AAAA,MAGMC,KAAK,GAAGH,SAAS,CAACG,KAHxB;AAAA,MAIMC,IAAI,GAAGJ,SAAS,CAACI,IAJvB;AAAA,MAKMC,gBAAgB,GAAGL,SAAS,CAACK,gBALnC;AAMA;;;;;;;;;;;;;;;AAeA,MAAMC,iBAAN,SAAgCP,MAAhC,CAAuC;AACrCQ,EAAAA,WAAW,CAACC,IAAI,GAAG,EAAR,EAAY;AACrB,UAAMA,IAAN;AACA,SAAKC,GAAL,GAAWD,IAAI,CAACE,OAAhB;AACA,SAAKZ,MAAL,GAAcU,IAAI,CAACV,MAAL,IAAe,CAA7B;AACA,SAAKa,WAAL,GAAmBH,IAAI,CAACV,MAAL,IAAe,CAAlC;AACA,SAAKc,IAAL,GAAYJ,IAAI,CAACI,IAAL,IAAa,EAAzB;AACA,SAAKC,IAAL,GAAYL,IAAI,CAACK,IAAL,IAAa,6BAAzB;AACA,SAAKC,WAAL,GAAmBN,IAAI,CAACO,GAAxB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,UAAL,GAAkBT,IAAI,CAACU,GAAvB;AACA,SAAKC,YAAL,GAAoBX,IAAI,CAACW,YAAzB;AACA,SAAKC,cAAL,GAAsBZ,IAAI,CAACY,cAAL,IAAuB,EAA7C;AACA,SAAKC,KAAL,GAAab,IAAI,CAACc,OAAL,CAAaC,GAAb,CAAiB,CAACC,EAAD,EAAKC,GAAL,KAAa;AACzC,UAAI,OAAOD,EAAP,KAAc,QAAlB,EAA4BA,EAAE,GAAG;AAC/BE,QAAAA,KAAK,EAAEF,EADwB;AAE/BH,QAAAA,KAAK,EAAEI;AAFwB,OAAL;AAI5B,aAAO;AACLC,QAAAA,KAAK,EAAEF,EAAE,KAAKA,EAAE,CAACE,KAAH,IAAYF,EAAE,CAACH,KAAf,IAAwBG,EAA7B,CADJ;AAELG,QAAAA,WAAW,EAAEH,EAAE,IAAIA,EAAE,CAACG,WAFjB;AAGLN,QAAAA,KAAK,EAAEG,EAAE,KAAKA,EAAE,CAACH,KAAH,KAAaO,SAAb,GAAyBH,GAAzB,GAA+BD,EAAE,CAACH,KAAvC,CAHJ;AAILQ,QAAAA,QAAQ,EAAEL,EAAE,IAAIA,EAAE,CAACK,QAJd;AAKLC,QAAAA,QAAQ,EAAEN,EAAE,IAAIA,EAAE,CAACM;AALd,OAAP;AAOD,KAZY,CAAb;AAaA,SAAK7B,KAAL,GAAaA,KAAK,CAAC,EAAD,CAAlB;;AAEA,QAAI,CAACO,IAAI,CAACuB,cAAV,EAA0B;AACxB,WAAKC,MAAL;AACD;AACF;;AAEDC,EAAAA,KAAK,GAAG;AACN,SAAKZ,KAAL,CAAWE,GAAX,CAAeW,CAAC,IAAI,CAACA,CAAC,CAACL,QAAvB;AACA,SAAK/B,MAAL,GAAc,CAAd;AACA,SAAKqC,IAAL;AACA,SAAKH,MAAL;AACD;;AAEDH,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKR,KAAL,CAAWe,MAAX,CAAkBF,CAAC,IAAIA,CAAC,CAACL,QAAzB,CAAP;AACD;;AAEDQ,EAAAA,KAAK,GAAG;AACN,SAAKC,IAAL,GAAY,KAAKC,OAAL,GAAe,IAA3B;AACA,SAAKJ,IAAL;AACA,SAAKH,MAAL;AACA,SAAKQ,GAAL,CAASC,KAAT,CAAe,IAAf;AACA,SAAKC,KAAL;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMd,QAAQ,GAAG,KAAKR,KAAL,CAAWe,MAAX,CAAkBQ,CAAC,IAAIA,CAAC,CAACf,QAAzB,CAAjB;;AAEA,QAAI,KAAKf,WAAL,IAAoBe,QAAQ,CAACgB,MAAT,GAAkB,KAAK/B,WAA/C,EAA4D;AAC1D,WAAKE,YAAL,GAAoB,IAApB;AACA,WAAKgB,MAAL;AACD,KAHD,MAGO;AACL,WAAKM,IAAL,GAAY,IAAZ;AACA,WAAKC,OAAL,GAAe,KAAf;AACA,WAAKJ,IAAL;AACA,WAAKH,MAAL;AACA,WAAKQ,GAAL,CAASC,KAAT,CAAe,IAAf;AACA,WAAKC,KAAL;AACD;AACF;;AAEDI,EAAAA,KAAK,GAAG;AACN,SAAKhD,MAAL,GAAc,CAAd;AACA,SAAKkC,MAAL;AACD;;AAEDe,EAAAA,IAAI,GAAG;AACL,SAAKjD,MAAL,GAAc,KAAKuB,KAAL,CAAWwB,MAAX,GAAoB,CAAlC;AACA,SAAKb,MAAL;AACD;;AAEDgB,EAAAA,IAAI,GAAG;AACL,SAAKlD,MAAL,GAAc,CAAC,KAAKA,MAAL,GAAc,CAAf,IAAoB,KAAKuB,KAAL,CAAWwB,MAA7C;AACA,SAAKb,MAAL;AACD;;AAEDiB,EAAAA,EAAE,GAAG;AACH,QAAI,KAAKnD,MAAL,KAAgB,CAApB,EAAuB;AACrB,WAAKA,MAAL,GAAc,KAAKuB,KAAL,CAAWwB,MAAX,GAAoB,CAAlC;AACD,KAFD,MAEO;AACL,WAAK/C,MAAL;AACD;;AAED,SAAKkC,MAAL;AACD;;AAEDkB,EAAAA,IAAI,GAAG;AACL,QAAI,KAAKpD,MAAL,KAAgB,KAAKuB,KAAL,CAAWwB,MAAX,GAAoB,CAAxC,EAA2C;AACzC,WAAK/C,MAAL,GAAc,CAAd;AACD,KAFD,MAEO;AACL,WAAKA,MAAL;AACD;;AAED,SAAKkC,MAAL;AACD;;AAEDmB,EAAAA,IAAI,GAAG;AACL,SAAK9B,KAAL,CAAW,KAAKvB,MAAhB,EAAwB+B,QAAxB,GAAmC,KAAnC;AACA,SAAKG,MAAL;AACD;;AAEDoB,EAAAA,KAAK,GAAG;AACN,QAAI,KAAK/B,KAAL,CAAWe,MAAX,CAAkBQ,CAAC,IAAIA,CAAC,CAACf,QAAzB,EAAmCgB,MAAnC,IAA6C,KAAK5B,UAAtD,EAAkE,OAAO,KAAKoC,IAAL,EAAP;AAClE,SAAKhC,KAAL,CAAW,KAAKvB,MAAhB,EAAwB+B,QAAxB,GAAmC,IAAnC;AACA,SAAKG,MAAL;AACD;;AAEDsB,EAAAA,iBAAiB,GAAG;AAClB,UAAMpB,CAAC,GAAG,KAAKb,KAAL,CAAW,KAAKvB,MAAhB,CAAV;;AAEA,QAAIoC,CAAC,CAACL,QAAN,EAAgB;AACdK,MAAAA,CAAC,CAACL,QAAF,GAAa,KAAb;AACA,WAAKG,MAAL;AACD,KAHD,MAGO,IAAIE,CAAC,CAACJ,QAAF,IAAc,KAAKT,KAAL,CAAWe,MAAX,CAAkBQ,CAAC,IAAIA,CAAC,CAACf,QAAzB,EAAmCgB,MAAnC,IAA6C,KAAK5B,UAApE,EAAgF;AACrF,aAAO,KAAKoC,IAAL,EAAP;AACD,KAFM,MAEA;AACLnB,MAAAA,CAAC,CAACL,QAAF,GAAa,IAAb;AACA,WAAKG,MAAL;AACD;AACF;;AAEDuB,EAAAA,SAAS,GAAG;AACV,QAAI,KAAKtC,UAAL,KAAoBW,SAApB,IAAiC,KAAKP,KAAL,CAAW,KAAKvB,MAAhB,EAAwBgC,QAA7D,EAAuE;AACrE,aAAO,KAAKuB,IAAL,EAAP;AACD;;AAED,UAAMG,WAAW,GAAG,CAAC,KAAKnC,KAAL,CAAW,KAAKvB,MAAhB,EAAwB+B,QAA7C;AACA,SAAKR,KAAL,CAAWe,MAAX,CAAkBF,CAAC,IAAI,CAACA,CAAC,CAACJ,QAA1B,EAAoC2B,OAApC,CAA4CvB,CAAC,IAAIA,CAAC,CAACL,QAAF,GAAa2B,WAA9D;AACA,SAAKxB,MAAL;AACD;;AAED0B,EAAAA,CAAC,CAACC,CAAD,EAAIC,GAAJ,EAAS;AACR,QAAID,CAAC,KAAK,GAAV,EAAe;AACb,WAAKL,iBAAL;AACD,KAFD,MAEO,IAAIK,CAAC,KAAK,GAAV,EAAe;AACpB,WAAKJ,SAAL;AACD,KAFM,MAEA;AACL,aAAO,KAAKF,IAAL,EAAP;AACD;AACF;;AAEDQ,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAK1C,YAAL,KAAsBS,SAAtB,IAAmC,KAAKT,YAA5C,EAA0D;AACxD,UAAI,OAAO,KAAKA,YAAZ,KAA6B,QAAjC,EAA2C;AACzC,eAAO,KAAKA,YAAZ;AACD;;AAED,aAAO,sBAAuB,OAAMjB,OAAO,CAAC4D,OAAQ,IAAG5D,OAAO,CAAC6D,SAAU,sBAAlE,GAA2F,OAAM7D,OAAO,CAAC8D,SAAU,IAAG9D,OAAO,CAAC+D,UAAW,8BAAzI,IAA0K,KAAKhD,UAAL,KAAoBW,SAApB,GAAiC,qBAAjC,GAAwD,EAAlO,IAAyO,mCAAhP;AACD;;AAED,WAAO,EAAP;AACD;;AAEDsC,EAAAA,YAAY,CAACpE,MAAD,EAASoC,CAAT,EAAYiC,CAAZ,EAAeC,cAAf,EAA+B;AACzC,UAAMC,MAAM,GAAG,CAACnC,CAAC,CAACL,QAAF,GAAalC,KAAK,CAAC2E,KAAN,CAAYpE,OAAO,CAACqE,OAApB,CAAb,GAA4CrE,OAAO,CAACsE,QAArD,IAAiE,GAAjE,GAAuEJ,cAAvE,GAAwF,GAAvG;AACA,QAAI1C,KAAJ,EAAW+C,IAAX;;AAEA,QAAIvC,CAAC,CAACJ,QAAN,EAAgB;AACdJ,MAAAA,KAAK,GAAG5B,MAAM,KAAKqE,CAAX,GAAexE,KAAK,CAAC+E,IAAN,GAAaC,SAAb,CAAuBzC,CAAC,CAACR,KAAzB,CAAf,GAAiD/B,KAAK,CAACiF,aAAN,GAAsBF,IAAtB,CAA2BxC,CAAC,CAACR,KAA7B,CAAzD;AACD,KAFD,MAEO;AACLA,MAAAA,KAAK,GAAG5B,MAAM,KAAKqE,CAAX,GAAexE,KAAK,CAACkF,IAAN,GAAaF,SAAb,CAAuBzC,CAAC,CAACR,KAAzB,CAAf,GAAiDQ,CAAC,CAACR,KAA3D;;AAEA,UAAI5B,MAAM,KAAKqE,CAAX,IAAgBjC,CAAC,CAACP,WAAtB,EAAmC;AACjC8C,QAAAA,IAAI,GAAI,MAAKvC,CAAC,CAACP,WAAY,EAA3B;;AAEA,YAAI0C,MAAM,CAACxB,MAAP,GAAgBnB,KAAK,CAACmB,MAAtB,GAA+B4B,IAAI,CAAC5B,MAApC,IAA8C,KAAKL,GAAL,CAASsC,OAAvD,IAAkE5C,CAAC,CAACP,WAAF,CAAcoD,KAAd,CAAoB,OAApB,EAA6BlC,MAA7B,GAAsC,CAA5G,EAA+G;AAC7G4B,UAAAA,IAAI,GAAG,OAAOrE,IAAI,CAAC8B,CAAC,CAACP,WAAH,EAAgB;AAChCqD,YAAAA,MAAM,EAAEX,MAAM,CAACxB,MADiB;AAEhCoC,YAAAA,KAAK,EAAE,KAAKzC,GAAL,CAASsC;AAFgB,WAAhB,CAAlB;AAID;AACF;AACF;;AAED,WAAOT,MAAM,GAAG3C,KAAT,GAAiB/B,KAAK,CAAC+E,IAAN,CAAWD,IAAI,IAAI,EAAnB,CAAxB;AACD,GAtLoC,CAsLnC;;;AAGFS,EAAAA,eAAe,CAACC,OAAD,EAAU;AACvB,QAAIA,OAAO,CAACtC,MAAR,KAAmB,CAAvB,EAA0B;AACxB,aAAOlD,KAAK,CAACyF,GAAN,CAAU,4BAAV,CAAP;AACD;;AAED,QAAIC,iBAAiB,GAAGhF,gBAAgB,CAAC,KAAKP,MAAN,EAAcqF,OAAO,CAACtC,MAAtB,EAA8B,KAAKzB,cAAnC,CAAxC;AAAA,QACIkE,UAAU,GAAGD,iBAAiB,CAACC,UADnC;AAAA,QAEIC,QAAQ,GAAGF,iBAAiB,CAACE,QAFjC;;AAIA,QAAIlB,MAAJ;AAAA,QACImB,aAAa,GAAG,EADpB;;AAGA,SAAK,IAAIrB,CAAC,GAAGmB,UAAb,EAAyBnB,CAAC,GAAGoB,QAA7B,EAAuCpB,CAAC,EAAxC,EAA4C;AAC1C,UAAIA,CAAC,KAAKmB,UAAN,IAAoBA,UAAU,GAAG,CAArC,EAAwC;AACtCjB,QAAAA,MAAM,GAAGnE,OAAO,CAAC4D,OAAjB;AACD,OAFD,MAEO,IAAIK,CAAC,KAAKoB,QAAQ,GAAG,CAAjB,IAAsBA,QAAQ,GAAGJ,OAAO,CAACtC,MAA7C,EAAqD;AAC1DwB,QAAAA,MAAM,GAAGnE,OAAO,CAAC6D,SAAjB;AACD,OAFM,MAEA;AACLM,QAAAA,MAAM,GAAG,GAAT;AACD;;AAEDmB,MAAAA,aAAa,CAACC,IAAd,CAAmB,KAAKvB,YAAL,CAAkB,KAAKpE,MAAvB,EAA+BqF,OAAO,CAAChB,CAAD,CAAtC,EAA2CA,CAA3C,EAA8CE,MAA9C,CAAnB;AACD;;AAED,WAAO,OAAOmB,aAAa,CAACE,IAAd,CAAmB,IAAnB,CAAd;AACD,GAlNoC,CAkNnC;;;AAGFC,EAAAA,aAAa,CAACR,OAAD,EAAU;AACrB,QAAI,CAAC,KAAK7C,IAAV,EAAgB;AACd,aAAO,KAAK4C,eAAL,CAAqBC,OAArB,CAAP;AACD;;AAED,WAAO,EAAP;AACD;;AAEDS,EAAAA,wBAAwB,GAAG;AACzB,QAAI,KAAKtD,IAAT,EAAe;AACb,aAAO,KAAKjB,KAAL,CAAWe,MAAX,CAAkBQ,CAAC,IAAIA,CAAC,CAACf,QAAzB,EAAmCN,GAAnC,CAAuCW,CAAC,IAAIA,CAAC,CAACR,KAA9C,EAAqDgE,IAArD,CAA0D,IAA1D,CAAP;AACD;;AAED,UAAMG,MAAM,GAAG,CAAClG,KAAK,CAAC+E,IAAN,CAAW,KAAK9D,IAAhB,CAAD,EAAwB,KAAKiD,kBAAL,EAAxB,CAAf;;AAEA,QAAI,KAAKxC,KAAL,CAAW,KAAKvB,MAAhB,EAAwBgC,QAA5B,EAAsC;AACpC+D,MAAAA,MAAM,CAACJ,IAAP,CAAY9F,KAAK,CAACmG,MAAN,CAAa,KAAKjF,IAAlB,CAAZ;AACD;;AAED,WAAOgF,MAAM,CAACH,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED1D,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK+D,MAAT,EAAiB;AACjB,QAAI,KAAKC,WAAT,EAAsB,KAAKxD,GAAL,CAASC,KAAT,CAAe3C,MAAM,CAACmG,IAAtB;AACtB,UAAMjE,MAAN,GAHO,CAGS;;AAEhB,QAAIkE,MAAM,GAAG,CAAC/F,KAAK,CAACgG,MAAN,CAAa,KAAK7D,IAAlB,EAAwB,KAAKC,OAA7B,CAAD,EAAwC5C,KAAK,CAACyG,IAAN,CAAW,KAAK3F,GAAhB,CAAxC,EAA8DN,KAAK,CAACkG,SAAN,CAAgB,KAAhB,CAA9D,EAAsF,KAAKT,wBAAL,EAAtF,EAAuHF,IAAvH,CAA4H,GAA5H,CAAb;;AAEA,QAAI,KAAK1E,YAAT,EAAuB;AACrBkF,MAAAA,MAAM,IAAIvG,KAAK,CAACyF,GAAN,CAAW,gCAA+B,KAAKtE,WAAY,WAA3D,CAAV;AACA,WAAKE,YAAL,GAAoB,KAApB;AACD;;AAEDkF,IAAAA,MAAM,IAAI,KAAKP,aAAL,CAAmB,KAAKtE,KAAxB,CAAV;AACA,SAAKmB,GAAL,CAASC,KAAT,CAAe,KAAKxC,KAAL,GAAaiG,MAA5B;AACA,SAAKjG,KAAL,GAAaA,KAAK,CAACiG,MAAD,CAAlB;AACD;;AA1PoC;;AA8PvCI,MAAM,CAACC,OAAP,GAAiBjG,iBAAjB","sourcesContent":["'use strict';\n\nconst color = require('kleur');\n\nconst _require = require('sisteransi'),\n      cursor = _require.cursor;\n\nconst Prompt = require('./prompt');\n\nconst _require2 = require('../util'),\n      clear = _require2.clear,\n      figures = _require2.figures,\n      style = _require2.style,\n      wrap = _require2.wrap,\n      entriesToDisplay = _require2.entriesToDisplay;\n/**\n * MultiselectPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of choice objects\n * @param {String} [opts.hint] Hint to display\n * @param {String} [opts.warn] Hint shown for disabled choices\n * @param {Number} [opts.max] Max choices\n * @param {Number} [opts.cursor=0] Cursor start position\n * @param {Number} [opts.optionsPerPage=10] Max options to display at once\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n */\n\n\nclass MultiselectPrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.cursor = opts.cursor || 0;\n    this.scrollIndex = opts.cursor || 0;\n    this.hint = opts.hint || '';\n    this.warn = opts.warn || '- This option is disabled -';\n    this.minSelected = opts.min;\n    this.showMinError = false;\n    this.maxChoices = opts.max;\n    this.instructions = opts.instructions;\n    this.optionsPerPage = opts.optionsPerPage || 10;\n    this.value = opts.choices.map((ch, idx) => {\n      if (typeof ch === 'string') ch = {\n        title: ch,\n        value: idx\n      };\n      return {\n        title: ch && (ch.title || ch.value || ch),\n        description: ch && ch.description,\n        value: ch && (ch.value === undefined ? idx : ch.value),\n        selected: ch && ch.selected,\n        disabled: ch && ch.disabled\n      };\n    });\n    this.clear = clear('');\n\n    if (!opts.overrideRender) {\n      this.render();\n    }\n  }\n\n  reset() {\n    this.value.map(v => !v.selected);\n    this.cursor = 0;\n    this.fire();\n    this.render();\n  }\n\n  selected() {\n    return this.value.filter(v => v.selected);\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    const selected = this.value.filter(e => e.selected);\n\n    if (this.minSelected && selected.length < this.minSelected) {\n      this.showMinError = true;\n      this.render();\n    } else {\n      this.done = true;\n      this.aborted = false;\n      this.fire();\n      this.render();\n      this.out.write('\\n');\n      this.close();\n    }\n  }\n\n  first() {\n    this.cursor = 0;\n    this.render();\n  }\n\n  last() {\n    this.cursor = this.value.length - 1;\n    this.render();\n  }\n\n  next() {\n    this.cursor = (this.cursor + 1) % this.value.length;\n    this.render();\n  }\n\n  up() {\n    if (this.cursor === 0) {\n      this.cursor = this.value.length - 1;\n    } else {\n      this.cursor--;\n    }\n\n    this.render();\n  }\n\n  down() {\n    if (this.cursor === this.value.length - 1) {\n      this.cursor = 0;\n    } else {\n      this.cursor++;\n    }\n\n    this.render();\n  }\n\n  left() {\n    this.value[this.cursor].selected = false;\n    this.render();\n  }\n\n  right() {\n    if (this.value.filter(e => e.selected).length >= this.maxChoices) return this.bell();\n    this.value[this.cursor].selected = true;\n    this.render();\n  }\n\n  handleSpaceToggle() {\n    const v = this.value[this.cursor];\n\n    if (v.selected) {\n      v.selected = false;\n      this.render();\n    } else if (v.disabled || this.value.filter(e => e.selected).length >= this.maxChoices) {\n      return this.bell();\n    } else {\n      v.selected = true;\n      this.render();\n    }\n  }\n\n  toggleAll() {\n    if (this.maxChoices !== undefined || this.value[this.cursor].disabled) {\n      return this.bell();\n    }\n\n    const newSelected = !this.value[this.cursor].selected;\n    this.value.filter(v => !v.disabled).forEach(v => v.selected = newSelected);\n    this.render();\n  }\n\n  _(c, key) {\n    if (c === ' ') {\n      this.handleSpaceToggle();\n    } else if (c === 'a') {\n      this.toggleAll();\n    } else {\n      return this.bell();\n    }\n  }\n\n  renderInstructions() {\n    if (this.instructions === undefined || this.instructions) {\n      if (typeof this.instructions === 'string') {\n        return this.instructions;\n      }\n\n      return '\\nInstructions:\\n' + `    ${figures.arrowUp}/${figures.arrowDown}: Highlight option\\n` + `    ${figures.arrowLeft}/${figures.arrowRight}/[space]: Toggle selection\\n` + (this.maxChoices === undefined ? `    a: Toggle all\\n` : '') + `    enter/return: Complete answer`;\n    }\n\n    return '';\n  }\n\n  renderOption(cursor, v, i, arrowIndicator) {\n    const prefix = (v.selected ? color.green(figures.radioOn) : figures.radioOff) + ' ' + arrowIndicator + ' ';\n    let title, desc;\n\n    if (v.disabled) {\n      title = cursor === i ? color.gray().underline(v.title) : color.strikethrough().gray(v.title);\n    } else {\n      title = cursor === i ? color.cyan().underline(v.title) : v.title;\n\n      if (cursor === i && v.description) {\n        desc = ` - ${v.description}`;\n\n        if (prefix.length + title.length + desc.length >= this.out.columns || v.description.split(/\\r?\\n/).length > 1) {\n          desc = '\\n' + wrap(v.description, {\n            margin: prefix.length,\n            width: this.out.columns\n          });\n        }\n      }\n    }\n\n    return prefix + title + color.gray(desc || '');\n  } // shared with autocompleteMultiselect\n\n\n  paginateOptions(options) {\n    if (options.length === 0) {\n      return color.red('No matches for this query.');\n    }\n\n    let _entriesToDisplay = entriesToDisplay(this.cursor, options.length, this.optionsPerPage),\n        startIndex = _entriesToDisplay.startIndex,\n        endIndex = _entriesToDisplay.endIndex;\n\n    let prefix,\n        styledOptions = [];\n\n    for (let i = startIndex; i < endIndex; i++) {\n      if (i === startIndex && startIndex > 0) {\n        prefix = figures.arrowUp;\n      } else if (i === endIndex - 1 && endIndex < options.length) {\n        prefix = figures.arrowDown;\n      } else {\n        prefix = ' ';\n      }\n\n      styledOptions.push(this.renderOption(this.cursor, options[i], i, prefix));\n    }\n\n    return '\\n' + styledOptions.join('\\n');\n  } // shared with autocomleteMultiselect\n\n\n  renderOptions(options) {\n    if (!this.done) {\n      return this.paginateOptions(options);\n    }\n\n    return '';\n  }\n\n  renderDoneOrInstructions() {\n    if (this.done) {\n      return this.value.filter(e => e.selected).map(v => v.title).join(', ');\n    }\n\n    const output = [color.gray(this.hint), this.renderInstructions()];\n\n    if (this.value[this.cursor].disabled) {\n      output.push(color.yellow(this.warn));\n    }\n\n    return output.join(' ');\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);\n    super.render(); // print prompt\n\n    let prompt = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(false), this.renderDoneOrInstructions()].join(' ');\n\n    if (this.showMinError) {\n      prompt += color.red(`You must select a minimum of ${this.minSelected} choices.`);\n      this.showMinError = false;\n    }\n\n    prompt += this.renderOptions(this.value);\n    this.out.write(this.clear + prompt);\n    this.clear = clear(prompt);\n  }\n\n}\n\nmodule.exports = MultiselectPrompt;"]},"metadata":{},"sourceType":"script"}