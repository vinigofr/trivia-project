{"ast":null,"code":"'use strict';\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('sisteransi'),\n      erase = _require.erase,\n      cursor = _require.cursor;\n\nconst _require2 = require('../util'),\n      style = _require2.style,\n      clear = _require2.clear,\n      figures = _require2.figures,\n      wrap = _require2.wrap,\n      entriesToDisplay = _require2.entriesToDisplay;\n\nconst getVal = (arr, i) => arr[i] && (arr[i].value || arr[i].title || arr[i]);\n\nconst getTitle = (arr, i) => arr[i] && (arr[i].title || arr[i].value || arr[i]);\n\nconst getIndex = (arr, valOrTitle) => {\n  const index = arr.findIndex(el => el.value === valOrTitle || el.title === valOrTitle);\n  return index > -1 ? index : undefined;\n};\n/**\n * TextPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of auto-complete choices objects\n * @param {Function} [opts.suggest] Filter function. Defaults to sort by title\n * @param {Number} [opts.limit=10] Max number of results to show\n * @param {Number} [opts.cursor=0] Cursor start position\n * @param {String} [opts.style='default'] Render style\n * @param {String} [opts.fallback] Fallback message - initial to default value\n * @param {String} [opts.initial] Index of the default value\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.noMatches] The no matches found label\n */\n\n\nclass AutocompletePrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.suggest = opts.suggest;\n    this.choices = opts.choices;\n    this.initial = typeof opts.initial === 'number' ? opts.initial : getIndex(opts.choices, opts.initial);\n    this.select = this.initial || opts.cursor || 0;\n    this.i18n = {\n      noMatches: opts.noMatches || 'no matches found'\n    };\n    this.fallback = opts.fallback || this.initial;\n    this.suggestions = [];\n    this.input = '';\n    this.limit = opts.limit || 10;\n    this.cursor = 0;\n    this.transform = style.render(opts.style);\n    this.scale = this.transform.scale;\n    this.render = this.render.bind(this);\n    this.complete = this.complete.bind(this);\n    this.clear = clear('');\n    this.complete(this.render);\n    this.render();\n  }\n\n  set fallback(fb) {\n    this._fb = Number.isSafeInteger(parseInt(fb)) ? parseInt(fb) : fb;\n  }\n\n  get fallback() {\n    let choice;\n    if (typeof this._fb === 'number') choice = this.choices[this._fb];else if (typeof this._fb === 'string') choice = {\n      title: this._fb\n    };\n    return choice || this._fb || {\n      title: this.i18n.noMatches\n    };\n  }\n\n  moveSelect(i) {\n    this.select = i;\n    if (this.suggestions.length > 0) this.value = getVal(this.suggestions, i);else this.value = this.fallback.value;\n    this.fire();\n  }\n\n  async complete(cb) {\n    const p = this.completing = this.suggest(this.input, this.choices);\n    const suggestions = await p;\n    if (this.completing !== p) return;\n    this.suggestions = suggestions.map((s, i, arr) => ({\n      title: getTitle(arr, i),\n      value: getVal(arr, i),\n      description: s.description\n    }));\n    this.completing = false;\n    const l = Math.max(suggestions.length - 1, 0);\n    this.moveSelect(Math.min(l, this.select));\n    cb && cb();\n  }\n\n  reset() {\n    this.input = '';\n    this.complete(() => {\n      this.moveSelect(this.initial !== void 0 ? this.initial : 0);\n      this.render();\n    });\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  _(c, key) {\n    let s1 = this.input.slice(0, this.cursor);\n    let s2 = this.input.slice(this.cursor);\n    this.input = `${s1}${c}${s2}`;\n    this.cursor = s1.length + 1;\n    this.complete(this.render);\n    this.render();\n  }\n\n  delete() {\n    if (this.cursor === 0) return this.bell();\n    let s1 = this.input.slice(0, this.cursor - 1);\n    let s2 = this.input.slice(this.cursor);\n    this.input = `${s1}${s2}`;\n    this.complete(this.render);\n    this.cursor = this.cursor - 1;\n    this.render();\n  }\n\n  deleteForward() {\n    if (this.cursor * this.scale >= this.rendered.length) return this.bell();\n    let s1 = this.input.slice(0, this.cursor);\n    let s2 = this.input.slice(this.cursor + 1);\n    this.input = `${s1}${s2}`;\n    this.complete(this.render);\n    this.render();\n  }\n\n  first() {\n    this.moveSelect(0);\n    this.render();\n  }\n\n  last() {\n    this.moveSelect(this.suggestions.length - 1);\n    this.render();\n  }\n\n  up() {\n    if (this.select <= 0) return this.bell();\n    this.moveSelect(this.select - 1);\n    this.render();\n  }\n\n  down() {\n    if (this.select >= this.suggestions.length - 1) return this.bell();\n    this.moveSelect(this.select + 1);\n    this.render();\n  }\n\n  next() {\n    if (this.select === this.suggestions.length - 1) {\n      this.moveSelect(0);\n    } else this.moveSelect(this.select + 1);\n\n    this.render();\n  }\n\n  nextPage() {\n    this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1));\n    this.render();\n  }\n\n  prevPage() {\n    this.moveSelect(Math.max(this.select - this.limit, 0));\n    this.render();\n  }\n\n  left() {\n    if (this.cursor <= 0) return this.bell();\n    this.cursor = this.cursor - 1;\n    this.render();\n  }\n\n  right() {\n    if (this.cursor * this.scale >= this.rendered.length) return this.bell();\n    this.cursor = this.cursor + 1;\n    this.render();\n  }\n\n  renderOption(v, hovered, isStart, isEnd) {\n    let desc;\n    let prefix = isStart ? figures.arrowUp : isEnd ? figures.arrowDown : ' ';\n    let title = hovered ? color.cyan().underline(v.title) : v.title;\n    prefix = (hovered ? color.cyan(figures.pointer) + ' ' : '  ') + prefix;\n\n    if (v.description) {\n      desc = ` - ${v.description}`;\n\n      if (prefix.length + title.length + desc.length >= this.out.columns || v.description.split(/\\r?\\n/).length > 1) {\n        desc = '\\n' + wrap(v.description, {\n          margin: 3,\n          width: this.out.columns\n        });\n      }\n    }\n\n    return prefix + ' ' + title + color.gray(desc || '');\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText));\n    super.render();\n\n    let _entriesToDisplay = entriesToDisplay(this.select, this.choices.length, this.limit),\n        startIndex = _entriesToDisplay.startIndex,\n        endIndex = _entriesToDisplay.endIndex;\n\n    this.outputText = [color.bold(style.symbol(this.done, this.aborted)), color.bold(this.msg), style.delimiter(this.completing), this.done && this.suggestions[this.select] ? this.suggestions[this.select].title : this.rendered = this.transform.render(this.input)].join(' ');\n\n    if (!this.done) {\n      const suggestions = this.suggestions.slice(startIndex, endIndex).map((item, i) => this.renderOption(item, this.select === i + startIndex, i === 0 && startIndex > 0, i + startIndex === endIndex - 1 && endIndex < this.choices.length)).join('\\n');\n      this.outputText += `\\n` + (suggestions || color.gray(this.fallback.title));\n    }\n\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n\n}\n\nmodule.exports = AutocompletePrompt;","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/node_modules/prompts/lib/elements/autocomplete.js"],"names":["color","require","Prompt","erase","cursor","style","clear","figures","wrap","entriesToDisplay","getVal","arr","i","value","title","getTitle","getIndex","valOrTitle","index","findIndex","el","undefined","AutocompletePrompt","constructor","opts","msg","message","suggest","choices","initial","select","i18n","noMatches","fallback","suggestions","input","limit","transform","render","scale","bind","complete","fb","_fb","Number","isSafeInteger","parseInt","choice","moveSelect","length","fire","cb","p","completing","map","s","description","l","Math","max","min","reset","abort","done","aborted","out","write","close","submit","_","c","key","s1","slice","s2","delete","bell","deleteForward","rendered","first","last","up","down","next","nextPage","prevPage","left","right","renderOption","v","hovered","isStart","isEnd","desc","prefix","arrowUp","arrowDown","cyan","underline","pointer","columns","split","margin","width","gray","closed","firstRender","hide","outputText","startIndex","endIndex","bold","symbol","delimiter","join","item","line","to","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst color = require('kleur');\nconst Prompt = require('./prompt');\nconst { erase, cursor } = require('sisteransi');\nconst { style, clear, figures, wrap, entriesToDisplay } = require('../util');\n\nconst getVal = (arr, i) => arr[i] && (arr[i].value || arr[i].title || arr[i]);\nconst getTitle = (arr, i) => arr[i] && (arr[i].title || arr[i].value || arr[i]);\nconst getIndex = (arr, valOrTitle) => {\n  const index = arr.findIndex(el => el.value === valOrTitle || el.title === valOrTitle);\n  return index > -1 ? index : undefined;\n};\n\n/**\n * TextPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of auto-complete choices objects\n * @param {Function} [opts.suggest] Filter function. Defaults to sort by title\n * @param {Number} [opts.limit=10] Max number of results to show\n * @param {Number} [opts.cursor=0] Cursor start position\n * @param {String} [opts.style='default'] Render style\n * @param {String} [opts.fallback] Fallback message - initial to default value\n * @param {String} [opts.initial] Index of the default value\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.noMatches] The no matches found label\n */\nclass AutocompletePrompt extends Prompt {\n  constructor(opts={}) {\n    super(opts);\n    this.msg = opts.message;\n    this.suggest = opts.suggest;\n    this.choices = opts.choices;\n    this.initial = typeof opts.initial === 'number'\n      ? opts.initial\n      : getIndex(opts.choices, opts.initial);\n    this.select = this.initial || opts.cursor || 0;\n    this.i18n = { noMatches: opts.noMatches || 'no matches found' };\n    this.fallback = opts.fallback || this.initial;\n    this.suggestions = [];\n    this.input = '';\n    this.limit = opts.limit || 10;\n    this.cursor = 0;\n    this.transform = style.render(opts.style);\n    this.scale = this.transform.scale;\n    this.render = this.render.bind(this);\n    this.complete = this.complete.bind(this);\n    this.clear = clear('');\n    this.complete(this.render);\n    this.render();\n  }\n\n  set fallback(fb) {\n    this._fb = Number.isSafeInteger(parseInt(fb)) ? parseInt(fb) : fb;\n  }\n\n  get fallback() {\n    let choice;\n    if (typeof this._fb === 'number')\n      choice = this.choices[this._fb];\n    else if (typeof this._fb === 'string')\n      choice = { title: this._fb };\n    return choice || this._fb || { title: this.i18n.noMatches };\n  }\n\n  moveSelect(i) {\n    this.select = i;\n    if (this.suggestions.length > 0)\n      this.value = getVal(this.suggestions, i);\n    else this.value = this.fallback.value;\n    this.fire();\n  }\n\n  async complete(cb) {\n    const p = (this.completing = this.suggest(this.input, this.choices));\n    const suggestions = await p;\n\n    if (this.completing !== p) return;\n    this.suggestions = suggestions\n      .map((s, i, arr) => ({ title: getTitle(arr, i), value: getVal(arr, i), description: s.description }));\n    this.completing = false;\n    const l = Math.max(suggestions.length - 1, 0);\n    this.moveSelect(Math.min(l, this.select));\n\n    cb && cb();\n  }\n\n  reset() {\n    this.input = '';\n    this.complete(() => {\n      this.moveSelect(this.initial !== void 0 ? this.initial : 0);\n      this.render();\n    });\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  _(c, key) {\n    let s1 = this.input.slice(0, this.cursor);\n    let s2 = this.input.slice(this.cursor);\n    this.input = `${s1}${c}${s2}`;\n    this.cursor = s1.length+1;\n    this.complete(this.render);\n    this.render();\n  }\n\n  delete() {\n    if (this.cursor === 0) return this.bell();\n    let s1 = this.input.slice(0, this.cursor-1);\n    let s2 = this.input.slice(this.cursor);\n    this.input = `${s1}${s2}`;\n    this.complete(this.render);\n    this.cursor = this.cursor-1;\n    this.render();\n  }\n\n  deleteForward() {\n    if(this.cursor*this.scale >= this.rendered.length) return this.bell();\n    let s1 = this.input.slice(0, this.cursor);\n    let s2 = this.input.slice(this.cursor+1);\n    this.input = `${s1}${s2}`;\n    this.complete(this.render);\n    this.render();\n  }\n\n  first() {\n    this.moveSelect(0);\n    this.render();\n  }\n\n  last() {\n    this.moveSelect(this.suggestions.length - 1);\n    this.render();\n  }\n\n  up() {\n    if (this.select <= 0) return this.bell();\n    this.moveSelect(this.select - 1);\n    this.render();\n  }\n\n  down() {\n    if (this.select >= this.suggestions.length - 1) return this.bell();\n    this.moveSelect(this.select + 1);\n    this.render();\n  }\n\n  next() {\n    if (this.select === this.suggestions.length - 1) {\n      this.moveSelect(0);\n    } else this.moveSelect(this.select + 1);\n    this.render();\n  }\n\n  nextPage() {\n    this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1));\n    this.render();\n  }\n\n  prevPage() {\n    this.moveSelect(Math.max(this.select - this.limit, 0));\n    this.render();\n  }\n\n  left() {\n    if (this.cursor <= 0) return this.bell();\n    this.cursor = this.cursor-1;\n    this.render();\n  }\n\n  right() {\n    if (this.cursor*this.scale >= this.rendered.length) return this.bell();\n    this.cursor = this.cursor+1;\n    this.render();\n  }\n\n  renderOption(v, hovered, isStart, isEnd) {\n    let desc;\n    let prefix = isStart ? figures.arrowUp : isEnd ? figures.arrowDown : ' ';\n    let title = hovered ? color.cyan().underline(v.title) : v.title;\n    prefix = (hovered ? color.cyan(figures.pointer) + ' ' : '  ') + prefix;\n    if (v.description) {\n      desc = ` - ${v.description}`;\n      if (prefix.length + title.length + desc.length >= this.out.columns\n        || v.description.split(/\\r?\\n/).length > 1) {\n        desc = '\\n' + wrap(v.description, { margin: 3, width: this.out.columns })\n      }\n    }\n    return prefix + ' ' + title + color.gray(desc || '');\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);\n    else this.out.write(clear(this.outputText));\n    super.render();\n\n    let { startIndex, endIndex } = entriesToDisplay(this.select, this.choices.length, this.limit);\n\n    this.outputText = [\n      color.bold(style.symbol(this.done, this.aborted)),\n      color.bold(this.msg),\n      style.delimiter(this.completing),\n      this.done && this.suggestions[this.select]\n        ? this.suggestions[this.select].title\n        : this.rendered = this.transform.render(this.input)\n    ].join(' ');\n\n    if (!this.done) {\n      const suggestions = this.suggestions\n        .slice(startIndex, endIndex)\n        .map((item, i) =>  this.renderOption(item,\n          this.select === i + startIndex,\n          i === 0 && startIndex > 0,\n          i + startIndex === endIndex - 1 && endIndex < this.choices.length))\n        .join('\\n');\n      this.outputText += `\\n` + (suggestions || color.gray(this.fallback.title));\n    }\n\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n}\n\nmodule.exports = AutocompletePrompt;\n"]},"metadata":{},"sourceType":"script"}