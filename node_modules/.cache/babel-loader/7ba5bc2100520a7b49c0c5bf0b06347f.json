{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/src/components/Questions.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { questionsRequest } from '../actions';\n\nclass Questions extends Component {\n  // constructor() {\n  //   super();\n  //   return a;\n  // }\n  componentDidMount() {\n    const requestQuestions = this.props.requestQuestions;\n    const token = localStorage.getItem('token');\n    requestQuestions(token);\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Categoria da pergunta\"), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Texto da pergunta\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  questions: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestQuestions: token => dispatch(questionsRequest(token))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/src/components/Questions.jsx"],"names":["React","Component","connect","questionsRequest","Questions","componentDidMount","requestQuestions","props","token","localStorage","getItem","render","console","log","mapStateToProps","state","questions","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChC;AACA;AACA;AACA;AAEAI,EAAAA,iBAAiB,GAAG;AAAA,UACVC,gBADU,GACW,KAAKC,KADhB,CACVD,gBADU;AAElB,UAAME,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAJ,IAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,qBAAY,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CADF;AAOD;;AAtB+B;;AAyBlC,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,SAAS,EAAED;AADuB,CAAZ,CAAxB;;AAIA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,gBAAgB,EAAGE,KAAD,IAAWU,QAAQ,CAACf,gBAAgB,CAACK,KAAD,CAAjB;AADG,CAAf,CAA3B;;AAIA,eAAeN,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { questionsRequest } from '../actions';\n\nclass Questions extends Component {\n  // constructor() {\n  //   super();\n  //   return a;\n  // }\n\n  componentDidMount() {\n    const { requestQuestions } = this.props;\n    const token = localStorage.getItem('token');\n    requestQuestions(token);\n  }\n\n  render() {\n    console.log(this.props);\n\n    return (\n      <div>\n        <p data-testid=\"question-category\">Categoria da pergunta</p>\n        <p data-testid=\"question-text\">Texto da pergunta</p>\n        {/* map com mathrandom */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questions: state,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestQuestions: (token) => dispatch(questionsRequest(token)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}