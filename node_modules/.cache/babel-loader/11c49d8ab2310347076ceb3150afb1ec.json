{"ast":null,"code":"'use strict';\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('../util'),\n      style = _require.style,\n      clear = _require.clear,\n      figures = _require.figures;\n\nconst _require2 = require('sisteransi'),\n      erase = _require2.erase,\n      cursor = _require2.cursor;\n\nconst _require3 = require('../dateparts'),\n      DatePart = _require3.DatePart,\n      Meridiem = _require3.Meridiem,\n      Day = _require3.Day,\n      Hours = _require3.Hours,\n      Milliseconds = _require3.Milliseconds,\n      Minutes = _require3.Minutes,\n      Month = _require3.Month,\n      Seconds = _require3.Seconds,\n      Year = _require3.Year;\n\nconst regex = /\\\\(.)|\"((?:\\\\[\"\\\\]|[^\"])+)\"|(D[Do]?|d{3,4}|d)|(M{1,4})|(YY(?:YY)?)|([aA])|([Hh]{1,2})|(m{1,2})|(s{1,2})|(S{1,4})|./g;\nconst regexGroups = {\n  1: ({\n    token\n  }) => token.replace(/\\\\(.)/g, '$1'),\n  2: opts => new Day(opts),\n  // Day // TODO\n  3: opts => new Month(opts),\n  // Month\n  4: opts => new Year(opts),\n  // Year\n  5: opts => new Meridiem(opts),\n  // AM/PM // TODO (special)\n  6: opts => new Hours(opts),\n  // Hours\n  7: opts => new Minutes(opts),\n  // Minutes\n  8: opts => new Seconds(opts),\n  // Seconds\n  9: opts => new Milliseconds(opts) // Fractional seconds\n\n};\nconst dfltLocales = {\n  months: 'January,February,March,April,May,June,July,August,September,October,November,December'.split(','),\n  monthsShort: 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),\n  weekdays: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),\n  weekdaysShort: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(',')\n};\n/**\n * DatePrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Number} [opts.initial] Index of default value\n * @param {String} [opts.mask] The format mask\n * @param {object} [opts.locales] The date locales\n * @param {String} [opts.error] The error message shown on invalid value\n * @param {Function} [opts.validate] Function to validate the submitted value\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n */\n\nclass DatePrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.cursor = 0;\n    this.typed = '';\n    this.locales = Object.assign(dfltLocales, opts.locales);\n    this._date = opts.initial || new Date();\n    this.errorMsg = opts.error || 'Please Enter A Valid Value';\n\n    this.validator = opts.validate || (() => true);\n\n    this.mask = opts.mask || 'YYYY-MM-DD HH:mm:ss';\n    this.clear = clear('');\n    this.render();\n  }\n\n  get value() {\n    return this.date;\n  }\n\n  get date() {\n    return this._date;\n  }\n\n  set date(date) {\n    if (date) this._date.setTime(date.getTime());\n  }\n\n  set mask(mask) {\n    let result;\n    this.parts = [];\n\n    while (result = regex.exec(mask)) {\n      let match = result.shift();\n      let idx = result.findIndex(gr => gr != null);\n      this.parts.push(idx in regexGroups ? regexGroups[idx]({\n        token: result[idx] || match,\n        date: this.date,\n        parts: this.parts,\n        locales: this.locales\n      }) : result[idx] || match);\n    }\n\n    let parts = this.parts.reduce((arr, i) => {\n      if (typeof i === 'string' && typeof arr[arr.length - 1] === 'string') arr[arr.length - 1] += i;else arr.push(i);\n      return arr;\n    }, []);\n    this.parts.splice(0);\n    this.parts.push(...parts);\n    this.reset();\n  }\n\n  moveCursor(n) {\n    this.typed = '';\n    this.cursor = n;\n    this.fire();\n  }\n\n  reset() {\n    this.moveCursor(this.parts.findIndex(p => p instanceof DatePart));\n    this.fire();\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.error = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  async validate() {\n    let valid = await this.validator(this.value);\n\n    if (typeof valid === 'string') {\n      this.errorMsg = valid;\n      valid = false;\n    }\n\n    this.error = !valid;\n  }\n\n  async submit() {\n    await this.validate();\n\n    if (this.error) {\n      this.color = 'red';\n      this.fire();\n      this.render();\n      return;\n    }\n\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  up() {\n    this.typed = '';\n    this.parts[this.cursor].up();\n    this.render();\n  }\n\n  down() {\n    this.typed = '';\n    this.parts[this.cursor].down();\n    this.render();\n  }\n\n  left() {\n    let prev = this.parts[this.cursor].prev();\n    if (prev == null) return this.bell();\n    this.moveCursor(this.parts.indexOf(prev));\n    this.render();\n  }\n\n  right() {\n    let next = this.parts[this.cursor].next();\n    if (next == null) return this.bell();\n    this.moveCursor(this.parts.indexOf(next));\n    this.render();\n  }\n\n  next() {\n    let next = this.parts[this.cursor].next();\n    this.moveCursor(next ? this.parts.indexOf(next) : this.parts.findIndex(part => part instanceof DatePart));\n    this.render();\n  }\n\n  _(c) {\n    if (/\\d/.test(c)) {\n      this.typed += c;\n      this.parts[this.cursor].setTo(this.typed);\n      this.render();\n    }\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText));\n    super.render(); // Print prompt\n\n    this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(false), this.parts.reduce((arr, p, idx) => arr.concat(idx === this.cursor && !this.done ? color.cyan().underline(p.toString()) : p), []).join('')].join(' '); // Print error\n\n    if (this.error) {\n      this.outputText += this.errorMsg.split('\\n').reduce((a, l, i) => a + `\\n${i ? ` ` : figures.pointerSmall} ${color.red().italic(l)}`, ``);\n    }\n\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n\n}\n\nmodule.exports = DatePrompt;","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/node_modules/prompts/lib/elements/date.js"],"names":["color","require","Prompt","style","clear","figures","erase","cursor","DatePart","Meridiem","Day","Hours","Milliseconds","Minutes","Month","Seconds","Year","regex","regexGroups","token","replace","opts","dfltLocales","months","split","monthsShort","weekdays","weekdaysShort","DatePrompt","constructor","msg","message","typed","locales","Object","assign","_date","initial","Date","errorMsg","error","validator","validate","mask","render","value","date","setTime","getTime","result","parts","exec","match","shift","idx","findIndex","gr","push","reduce","arr","i","length","splice","reset","moveCursor","n","fire","p","abort","done","aborted","out","write","close","valid","submit","up","down","left","prev","bell","indexOf","right","next","part","_","c","test","setTo","closed","firstRender","hide","outputText","symbol","bold","delimiter","concat","cyan","underline","toString","join","a","l","pointerSmall","red","italic","line","to","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;iBACkCA,OAAO,CAAC,SAAD,C;MAAjCE,K,YAAAA,K;MAAOC,K,YAAAA,K;MAAOC,O,YAAAA,O;;kBACIJ,OAAO,CAAC,YAAD,C;MAAzBK,K,aAAAA,K;MAAOC,M,aAAAA,M;;kBACyEN,OAAO,CAAC,cAAD,C;MAAvFO,Q,aAAAA,Q;MAAUC,Q,aAAAA,Q;MAAUC,G,aAAAA,G;MAAKC,K,aAAAA,K;MAAOC,Y,aAAAA,Y;MAAcC,O,aAAAA,O;MAASC,K,aAAAA,K;MAAOC,O,aAAAA,O;MAASC,I,aAAAA,I;;AAE/E,MAAMC,KAAK,GAAG,qHAAd;AACA,MAAMC,WAAW,GAAG;AAClB,KAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAaA,KAAK,CAACC,OAAN,CAAc,QAAd,EAAwB,IAAxB,CADE;AAElB,KAAIC,IAAD,IAAU,IAAIX,GAAJ,CAAQW,IAAR,CAFK;AAEU;AAC5B,KAAIA,IAAD,IAAU,IAAIP,KAAJ,CAAUO,IAAV,CAHK;AAGY;AAC9B,KAAIA,IAAD,IAAU,IAAIL,IAAJ,CAASK,IAAT,CAJK;AAIW;AAC7B,KAAIA,IAAD,IAAU,IAAIZ,QAAJ,CAAaY,IAAb,CALK;AAKe;AACjC,KAAIA,IAAD,IAAU,IAAIV,KAAJ,CAAUU,IAAV,CANK;AAMY;AAC9B,KAAIA,IAAD,IAAU,IAAIR,OAAJ,CAAYQ,IAAZ,CAPK;AAOc;AAChC,KAAIA,IAAD,IAAU,IAAIN,OAAJ,CAAYM,IAAZ,CARK;AAQc;AAChC,KAAIA,IAAD,IAAU,IAAIT,YAAJ,CAAiBS,IAAjB,CATK,CASmB;;AATnB,CAApB;AAYA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,wFAAwFC,KAAxF,CAA8F,GAA9F,CADU;AAElBC,EAAAA,WAAW,EAAE,kDAAkDD,KAAlD,CAAwD,GAAxD,CAFK;AAGlBE,EAAAA,QAAQ,EAAE,2DAA2DF,KAA3D,CAAiE,GAAjE,CAHQ;AAIlBG,EAAAA,aAAa,EAAE,8BAA8BH,KAA9B,CAAoC,GAApC;AAJG,CAApB;AAQA;;;;;;;;;;;;;AAYA,MAAMI,UAAN,SAAyB1B,MAAzB,CAAgC;AAC9B2B,EAAAA,WAAW,CAACR,IAAI,GAAC,EAAN,EAAU;AACnB,UAAMA,IAAN;AACA,SAAKS,GAAL,GAAWT,IAAI,CAACU,OAAhB;AACA,SAAKxB,MAAL,GAAc,CAAd;AACA,SAAKyB,KAAL,GAAa,EAAb;AACA,SAAKC,OAAL,GAAeC,MAAM,CAACC,MAAP,CAAcb,WAAd,EAA2BD,IAAI,CAACY,OAAhC,CAAf;AACA,SAAKG,KAAL,GAAaf,IAAI,CAACgB,OAAL,IAAgB,IAAIC,IAAJ,EAA7B;AACA,SAAKC,QAAL,GAAgBlB,IAAI,CAACmB,KAAL,IAAc,4BAA9B;;AACA,SAAKC,SAAL,GAAiBpB,IAAI,CAACqB,QAAL,KAAkB,MAAM,IAAxB,CAAjB;;AACA,SAAKC,IAAL,GAAYtB,IAAI,CAACsB,IAAL,IAAa,qBAAzB;AACA,SAAKvC,KAAL,GAAaA,KAAK,CAAC,EAAD,CAAlB;AACA,SAAKwC,MAAL;AACD;;AAED,MAAIC,KAAJ,GAAY;AACV,WAAO,KAAKC,IAAZ;AACD;;AAED,MAAIA,IAAJ,GAAW;AACT,WAAO,KAAKV,KAAZ;AACD;;AAED,MAAIU,IAAJ,CAASA,IAAT,EAAe;AACb,QAAIA,IAAJ,EAAU,KAAKV,KAAL,CAAWW,OAAX,CAAmBD,IAAI,CAACE,OAAL,EAAnB;AACX;;AAED,MAAIL,IAAJ,CAASA,IAAT,EAAe;AACb,QAAIM,MAAJ;AACA,SAAKC,KAAL,GAAa,EAAb;;AACA,WAAMD,MAAM,GAAGhC,KAAK,CAACkC,IAAN,CAAWR,IAAX,CAAf,EAAiC;AAC/B,UAAIS,KAAK,GAAGH,MAAM,CAACI,KAAP,EAAZ;AACA,UAAIC,GAAG,GAAGL,MAAM,CAACM,SAAP,CAAiBC,EAAE,IAAIA,EAAE,IAAI,IAA7B,CAAV;AACA,WAAKN,KAAL,CAAWO,IAAX,CAAgBH,GAAG,IAAIpC,WAAP,GACZA,WAAW,CAACoC,GAAD,CAAX,CAAiB;AAAEnC,QAAAA,KAAK,EAAE8B,MAAM,CAACK,GAAD,CAAN,IAAeF,KAAxB;AAA+BN,QAAAA,IAAI,EAAE,KAAKA,IAA1C;AAAgDI,QAAAA,KAAK,EAAE,KAAKA,KAA5D;AAAmEjB,QAAAA,OAAO,EAAE,KAAKA;AAAjF,OAAjB,CADY,GAEZgB,MAAM,CAACK,GAAD,CAAN,IAAeF,KAFnB;AAGD;;AAED,QAAIF,KAAK,GAAG,KAAKA,KAAL,CAAWQ,MAAX,CAAkB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACxC,UAAI,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOD,GAAG,CAACA,GAAG,CAACE,MAAJ,GAAa,CAAd,CAAV,KAA+B,QAA5D,EACEF,GAAG,CAACA,GAAG,CAACE,MAAJ,GAAa,CAAd,CAAH,IAAuBD,CAAvB,CADF,KAEKD,GAAG,CAACF,IAAJ,CAASG,CAAT;AACL,aAAOD,GAAP;AACD,KALW,EAKT,EALS,CAAZ;AAOA,SAAKT,KAAL,CAAWY,MAAX,CAAkB,CAAlB;AACA,SAAKZ,KAAL,CAAWO,IAAX,CAAgB,GAAGP,KAAnB;AACA,SAAKa,KAAL;AACD;;AAEDC,EAAAA,UAAU,CAACC,CAAD,EAAI;AACZ,SAAKjC,KAAL,GAAa,EAAb;AACA,SAAKzB,MAAL,GAAc0D,CAAd;AACA,SAAKC,IAAL;AACD;;AAEDH,EAAAA,KAAK,GAAG;AACN,SAAKC,UAAL,CAAgB,KAAKd,KAAL,CAAWK,SAAX,CAAqBY,CAAC,IAAIA,CAAC,YAAY3D,QAAvC,CAAhB;AACA,SAAK0D,IAAL;AACA,SAAKtB,MAAL;AACD;;AAEDwB,EAAAA,KAAK,GAAG;AACN,SAAKC,IAAL,GAAY,KAAKC,OAAL,GAAe,IAA3B;AACA,SAAK9B,KAAL,GAAa,KAAb;AACA,SAAK0B,IAAL;AACA,SAAKtB,MAAL;AACA,SAAK2B,GAAL,CAASC,KAAT,CAAe,IAAf;AACA,SAAKC,KAAL;AACD;;AAED,QAAM/B,QAAN,GAAiB;AACf,QAAIgC,KAAK,GAAG,MAAM,KAAKjC,SAAL,CAAe,KAAKI,KAApB,CAAlB;;AACA,QAAI,OAAO6B,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAKnC,QAAL,GAAgBmC,KAAhB;AACAA,MAAAA,KAAK,GAAG,KAAR;AACD;;AACD,SAAKlC,KAAL,GAAa,CAACkC,KAAd;AACD;;AAED,QAAMC,MAAN,GAAe;AACb,UAAM,KAAKjC,QAAL,EAAN;;AACA,QAAI,KAAKF,KAAT,EAAgB;AACd,WAAKxC,KAAL,GAAa,KAAb;AACA,WAAKkE,IAAL;AACA,WAAKtB,MAAL;AACA;AACD;;AACD,SAAKyB,IAAL,GAAY,IAAZ;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKJ,IAAL;AACA,SAAKtB,MAAL;AACA,SAAK2B,GAAL,CAASC,KAAT,CAAe,IAAf;AACA,SAAKC,KAAL;AACD;;AAEDG,EAAAA,EAAE,GAAG;AACH,SAAK5C,KAAL,GAAa,EAAb;AACA,SAAKkB,KAAL,CAAW,KAAK3C,MAAhB,EAAwBqE,EAAxB;AACA,SAAKhC,MAAL;AACD;;AAEDiC,EAAAA,IAAI,GAAG;AACL,SAAK7C,KAAL,GAAa,EAAb;AACA,SAAKkB,KAAL,CAAW,KAAK3C,MAAhB,EAAwBsE,IAAxB;AACA,SAAKjC,MAAL;AACD;;AAEDkC,EAAAA,IAAI,GAAG;AACL,QAAIC,IAAI,GAAG,KAAK7B,KAAL,CAAW,KAAK3C,MAAhB,EAAwBwE,IAAxB,EAAX;AACA,QAAIA,IAAI,IAAI,IAAZ,EAAkB,OAAO,KAAKC,IAAL,EAAP;AAClB,SAAKhB,UAAL,CAAgB,KAAKd,KAAL,CAAW+B,OAAX,CAAmBF,IAAnB,CAAhB;AACA,SAAKnC,MAAL;AACD;;AAEDsC,EAAAA,KAAK,GAAG;AACN,QAAIC,IAAI,GAAG,KAAKjC,KAAL,CAAW,KAAK3C,MAAhB,EAAwB4E,IAAxB,EAAX;AACA,QAAIA,IAAI,IAAI,IAAZ,EAAkB,OAAO,KAAKH,IAAL,EAAP;AAClB,SAAKhB,UAAL,CAAgB,KAAKd,KAAL,CAAW+B,OAAX,CAAmBE,IAAnB,CAAhB;AACA,SAAKvC,MAAL;AACD;;AAEDuC,EAAAA,IAAI,GAAG;AACL,QAAIA,IAAI,GAAG,KAAKjC,KAAL,CAAW,KAAK3C,MAAhB,EAAwB4E,IAAxB,EAAX;AACA,SAAKnB,UAAL,CAAgBmB,IAAI,GAChB,KAAKjC,KAAL,CAAW+B,OAAX,CAAmBE,IAAnB,CADgB,GAEhB,KAAKjC,KAAL,CAAWK,SAAX,CAAsB6B,IAAD,IAAUA,IAAI,YAAY5E,QAA/C,CAFJ;AAGA,SAAKoC,MAAL;AACD;;AAEDyC,EAAAA,CAAC,CAACC,CAAD,EAAI;AACH,QAAI,KAAKC,IAAL,CAAUD,CAAV,CAAJ,EAAkB;AAChB,WAAKtD,KAAL,IAAcsD,CAAd;AACA,WAAKpC,KAAL,CAAW,KAAK3C,MAAhB,EAAwBiF,KAAxB,CAA8B,KAAKxD,KAAnC;AACA,WAAKY,MAAL;AACD;AACF;;AAEDA,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK6C,MAAT,EAAiB;AACjB,QAAI,KAAKC,WAAT,EAAsB,KAAKnB,GAAL,CAASC,KAAT,CAAejE,MAAM,CAACoF,IAAtB,EAAtB,KACK,KAAKpB,GAAL,CAASC,KAAT,CAAepE,KAAK,CAAC,KAAKwF,UAAN,CAApB;AACL,UAAMhD,MAAN,GAJO,CAMP;;AACA,SAAKgD,UAAL,GAAkB,CAChBzF,KAAK,CAAC0F,MAAN,CAAa,KAAKxB,IAAlB,EAAwB,KAAKC,OAA7B,CADgB,EAEhBtE,KAAK,CAAC8F,IAAN,CAAW,KAAKhE,GAAhB,CAFgB,EAGhB3B,KAAK,CAAC4F,SAAN,CAAgB,KAAhB,CAHgB,EAIhB,KAAK7C,KAAL,CAAWQ,MAAX,CAAkB,CAACC,GAAD,EAAMQ,CAAN,EAASb,GAAT,KAAiBK,GAAG,CAACqC,MAAJ,CAAW1C,GAAG,KAAK,KAAK/C,MAAb,IAAuB,CAAC,KAAK8D,IAA7B,GAAoCrE,KAAK,CAACiG,IAAN,GAAaC,SAAb,CAAuB/B,CAAC,CAACgC,QAAF,EAAvB,CAApC,GAA2EhC,CAAtF,CAAnC,EAA6H,EAA7H,EACKiC,IADL,CACU,EADV,CAJgB,EAMhBA,IANgB,CAMX,GANW,CAAlB,CAPO,CAeP;;AACA,QAAI,KAAK5D,KAAT,EAAgB;AACd,WAAKoD,UAAL,IAAmB,KAAKrD,QAAL,CAAcf,KAAd,CAAoB,IAApB,EAA0BkC,MAA1B,CACf,CAAC2C,CAAD,EAAIC,CAAJ,EAAO1C,CAAP,KAAayC,CAAC,GAAI,KAAIzC,CAAC,GAAI,GAAJ,GAASvD,OAAO,CAACkG,YAAa,IAAGvG,KAAK,CAACwG,GAAN,GAAYC,MAAZ,CAAmBH,CAAnB,CAAsB,EAD/D,EACmE,EADnE,CAAnB;AAED;;AAED,SAAK/B,GAAL,CAASC,KAAT,CAAelE,KAAK,CAACoG,IAAN,GAAanG,MAAM,CAACoG,EAAP,CAAU,CAAV,CAAb,GAA4B,KAAKf,UAAhD;AACD;;AAhK6B;;AAmKhCgB,MAAM,CAACC,OAAP,GAAiBjF,UAAjB","sourcesContent":["'use strict';\n\nconst color = require('kleur');\nconst Prompt = require('./prompt');\nconst { style, clear, figures } = require('../util');\nconst { erase, cursor } = require('sisteransi');\nconst { DatePart, Meridiem, Day, Hours, Milliseconds, Minutes, Month, Seconds, Year } = require('../dateparts');\n\nconst regex = /\\\\(.)|\"((?:\\\\[\"\\\\]|[^\"])+)\"|(D[Do]?|d{3,4}|d)|(M{1,4})|(YY(?:YY)?)|([aA])|([Hh]{1,2})|(m{1,2})|(s{1,2})|(S{1,4})|./g;\nconst regexGroups = {\n  1: ({token}) => token.replace(/\\\\(.)/g, '$1'),\n  2: (opts) => new Day(opts), // Day // TODO\n  3: (opts) => new Month(opts), // Month\n  4: (opts) => new Year(opts), // Year\n  5: (opts) => new Meridiem(opts), // AM/PM // TODO (special)\n  6: (opts) => new Hours(opts), // Hours\n  7: (opts) => new Minutes(opts), // Minutes\n  8: (opts) => new Seconds(opts), // Seconds\n  9: (opts) => new Milliseconds(opts), // Fractional seconds\n}\n\nconst dfltLocales = {\n  months: 'January,February,March,April,May,June,July,August,September,October,November,December'.split(','),\n  monthsShort: 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),\n  weekdays: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),\n  weekdaysShort: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(',')\n}\n\n\n/**\n * DatePrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Number} [opts.initial] Index of default value\n * @param {String} [opts.mask] The format mask\n * @param {object} [opts.locales] The date locales\n * @param {String} [opts.error] The error message shown on invalid value\n * @param {Function} [opts.validate] Function to validate the submitted value\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n */\nclass DatePrompt extends Prompt {\n  constructor(opts={}) {\n    super(opts);\n    this.msg = opts.message;\n    this.cursor = 0;\n    this.typed = '';\n    this.locales = Object.assign(dfltLocales, opts.locales);\n    this._date = opts.initial || new Date();\n    this.errorMsg = opts.error || 'Please Enter A Valid Value';\n    this.validator = opts.validate || (() => true);\n    this.mask = opts.mask || 'YYYY-MM-DD HH:mm:ss';\n    this.clear = clear('');\n    this.render();\n  }\n\n  get value() {\n    return this.date\n  }\n\n  get date() {\n    return this._date;\n  }\n\n  set date(date) {\n    if (date) this._date.setTime(date.getTime());\n  }\n\n  set mask(mask) {\n    let result;\n    this.parts = [];\n    while(result = regex.exec(mask)) {\n      let match = result.shift();\n      let idx = result.findIndex(gr => gr != null);\n      this.parts.push(idx in regexGroups\n        ? regexGroups[idx]({ token: result[idx] || match, date: this.date, parts: this.parts, locales: this.locales })\n        : result[idx] || match);\n    }\n\n    let parts = this.parts.reduce((arr, i) => {\n      if (typeof i === 'string' && typeof arr[arr.length - 1] === 'string')\n        arr[arr.length - 1] += i;\n      else arr.push(i);\n      return arr;\n    }, []);\n\n    this.parts.splice(0);\n    this.parts.push(...parts);\n    this.reset();\n  }\n\n  moveCursor(n) {\n    this.typed = '';\n    this.cursor = n;\n    this.fire();\n  }\n\n  reset() {\n    this.moveCursor(this.parts.findIndex(p => p instanceof DatePart));\n    this.fire();\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.error = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  async validate() {\n    let valid = await this.validator(this.value);\n    if (typeof valid === 'string') {\n      this.errorMsg = valid;\n      valid = false;\n    }\n    this.error = !valid;\n  }\n\n  async submit() {\n    await this.validate();\n    if (this.error) {\n      this.color = 'red';\n      this.fire();\n      this.render();\n      return;\n    }\n    this.done = true;\n    this.aborted = false;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  up() {\n    this.typed = '';\n    this.parts[this.cursor].up();\n    this.render();\n  }\n\n  down() {\n    this.typed = '';\n    this.parts[this.cursor].down();\n    this.render();\n  }\n\n  left() {\n    let prev = this.parts[this.cursor].prev();\n    if (prev == null) return this.bell();\n    this.moveCursor(this.parts.indexOf(prev));\n    this.render();\n  }\n\n  right() {\n    let next = this.parts[this.cursor].next();\n    if (next == null) return this.bell();\n    this.moveCursor(this.parts.indexOf(next));\n    this.render();\n  }\n\n  next() {\n    let next = this.parts[this.cursor].next();\n    this.moveCursor(next\n      ? this.parts.indexOf(next)\n      : this.parts.findIndex((part) => part instanceof DatePart));\n    this.render();\n  }\n\n  _(c) {\n    if (/\\d/.test(c)) {\n      this.typed += c;\n      this.parts[this.cursor].setTo(this.typed);\n      this.render();\n    }\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);\n    else this.out.write(clear(this.outputText));\n    super.render();\n\n    // Print prompt\n    this.outputText = [\n      style.symbol(this.done, this.aborted),\n      color.bold(this.msg),\n      style.delimiter(false),\n      this.parts.reduce((arr, p, idx) => arr.concat(idx === this.cursor && !this.done ? color.cyan().underline(p.toString()) : p), [])\n          .join('')\n    ].join(' ');\n\n    // Print error\n    if (this.error) {\n      this.outputText += this.errorMsg.split('\\n').reduce(\n          (a, l, i) => a + `\\n${i ? ` ` : figures.pointerSmall} ${color.red().italic(l)}`, ``);\n    }\n\n    this.out.write(erase.line + cursor.to(0) + this.outputText);\n  }\n}\n\nmodule.exports = DatePrompt;\n"]},"metadata":{},"sourceType":"script"}