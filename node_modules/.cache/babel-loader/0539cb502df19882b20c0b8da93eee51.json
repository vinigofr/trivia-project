{"ast":null,"code":"'use strict';\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('../util'),\n      style = _require.style,\n      clear = _require.clear,\n      figures = _require.figures,\n      wrap = _require.wrap,\n      entriesToDisplay = _require.entriesToDisplay;\n\nconst _require2 = require('sisteransi'),\n      cursor = _require2.cursor;\n/**\n * SelectPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of choice objects\n * @param {String} [opts.hint] Hint to display\n * @param {Number} [opts.initial] Index of default value\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {Number} [opts.optionsPerPage=10] Max options to display at once\n */\n\n\nclass SelectPrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.hint = opts.hint || '- Use arrow-keys. Return to submit.';\n    this.warn = opts.warn || '- This option is disabled';\n    this.cursor = opts.initial || 0;\n    this.choices = opts.choices.map((ch, idx) => {\n      if (typeof ch === 'string') ch = {\n        title: ch,\n        value: idx\n      };\n      return {\n        title: ch && (ch.title || ch.value || ch),\n        value: ch && (ch.value === undefined ? idx : ch.value),\n        description: ch && ch.description,\n        selected: ch && ch.selected,\n        disabled: ch && ch.disabled\n      };\n    });\n    this.optionsPerPage = opts.optionsPerPage || 10;\n    this.value = (this.choices[this.cursor] || {}).value;\n    this.clear = clear('');\n    this.render();\n  }\n\n  moveCursor(n) {\n    this.cursor = n;\n    this.value = this.choices[n].value;\n    this.fire();\n  }\n\n  reset() {\n    this.moveCursor(0);\n    this.fire();\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    if (!this.selection.disabled) {\n      this.done = true;\n      this.aborted = false;\n      this.fire();\n      this.render();\n      this.out.write('\\n');\n      this.close();\n    } else this.bell();\n  }\n\n  first() {\n    this.moveCursor(0);\n    this.render();\n  }\n\n  last() {\n    this.moveCursor(this.choices.length - 1);\n    this.render();\n  }\n\n  up() {\n    if (this.cursor === 0) return this.bell();\n    this.moveCursor(this.cursor - 1);\n    this.render();\n  }\n\n  down() {\n    if (this.cursor === this.choices.length - 1) return this.bell();\n    this.moveCursor(this.cursor + 1);\n    this.render();\n  }\n\n  next() {\n    this.moveCursor((this.cursor + 1) % this.choices.length);\n    this.render();\n  }\n\n  _(c, key) {\n    if (c === ' ') return this.submit();\n  }\n\n  get selection() {\n    return this.choices[this.cursor];\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText));\n    super.render();\n\n    let _entriesToDisplay = entriesToDisplay(this.cursor, this.choices.length, this.optionsPerPage),\n        startIndex = _entriesToDisplay.startIndex,\n        endIndex = _entriesToDisplay.endIndex; // Print prompt\n\n\n    this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(false), this.done ? this.selection.title : this.selection.disabled ? color.yellow(this.warn) : color.gray(this.hint)].join(' '); // Print choices\n\n    if (!this.done) {\n      this.outputText += '\\n';\n\n      for (let i = startIndex; i < endIndex; i++) {\n        let title,\n            prefix,\n            desc = '',\n            v = this.choices[i]; // Determine whether to display \"more choices\" indicators\n\n        if (i === startIndex && startIndex > 0) {\n          prefix = figures.arrowUp;\n        } else if (i === endIndex - 1 && endIndex < this.choices.length) {\n          prefix = figures.arrowDown;\n        } else {\n          prefix = ' ';\n        }\n\n        if (v.disabled) {\n          title = this.cursor === i ? color.gray().underline(v.title) : color.strikethrough().gray(v.title);\n          prefix = (this.cursor === i ? color.bold().gray(figures.pointer) + ' ' : '  ') + prefix;\n        } else {\n          title = this.cursor === i ? color.cyan().underline(v.title) : v.title;\n          prefix = (this.cursor === i ? color.cyan(figures.pointer) + ' ' : '  ') + prefix;\n\n          if (v.description && this.cursor === i) {\n            desc = ` - ${v.description}`;\n\n            if (prefix.length + title.length + desc.length >= this.out.columns || v.description.split(/\\r?\\n/).length > 1) {\n              desc = '\\n' + wrap(v.description, {\n                margin: 3,\n                width: this.out.columns\n              });\n            }\n          }\n        }\n\n        this.outputText += `${prefix} ${title}${color.gray(desc)}\\n`;\n      }\n    }\n\n    this.out.write(this.outputText);\n  }\n\n}\n\nmodule.exports = SelectPrompt;","map":{"version":3,"sources":["/home/vinicius/Desktop/Projects/sd-011-project-trivia-react-redux/node_modules/prompts/dist/elements/select.js"],"names":["color","require","Prompt","_require","style","clear","figures","wrap","entriesToDisplay","_require2","cursor","SelectPrompt","constructor","opts","msg","message","hint","warn","initial","choices","map","ch","idx","title","value","undefined","description","selected","disabled","optionsPerPage","render","moveCursor","n","fire","reset","abort","done","aborted","out","write","close","submit","selection","bell","first","last","length","up","down","next","_","c","key","closed","firstRender","hide","outputText","_entriesToDisplay","startIndex","endIndex","symbol","bold","delimiter","yellow","gray","join","i","prefix","desc","v","arrowUp","arrowDown","underline","strikethrough","pointer","cyan","columns","split","margin","width","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst _require = require('../util'),\n      style = _require.style,\n      clear = _require.clear,\n      figures = _require.figures,\n      wrap = _require.wrap,\n      entriesToDisplay = _require.entriesToDisplay;\n\nconst _require2 = require('sisteransi'),\n      cursor = _require2.cursor;\n/**\n * SelectPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {Array} opts.choices Array of choice objects\n * @param {String} [opts.hint] Hint to display\n * @param {Number} [opts.initial] Index of default value\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {Number} [opts.optionsPerPage=10] Max options to display at once\n */\n\n\nclass SelectPrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.msg = opts.message;\n    this.hint = opts.hint || '- Use arrow-keys. Return to submit.';\n    this.warn = opts.warn || '- This option is disabled';\n    this.cursor = opts.initial || 0;\n    this.choices = opts.choices.map((ch, idx) => {\n      if (typeof ch === 'string') ch = {\n        title: ch,\n        value: idx\n      };\n      return {\n        title: ch && (ch.title || ch.value || ch),\n        value: ch && (ch.value === undefined ? idx : ch.value),\n        description: ch && ch.description,\n        selected: ch && ch.selected,\n        disabled: ch && ch.disabled\n      };\n    });\n    this.optionsPerPage = opts.optionsPerPage || 10;\n    this.value = (this.choices[this.cursor] || {}).value;\n    this.clear = clear('');\n    this.render();\n  }\n\n  moveCursor(n) {\n    this.cursor = n;\n    this.value = this.choices[n].value;\n    this.fire();\n  }\n\n  reset() {\n    this.moveCursor(0);\n    this.fire();\n    this.render();\n  }\n\n  abort() {\n    this.done = this.aborted = true;\n    this.fire();\n    this.render();\n    this.out.write('\\n');\n    this.close();\n  }\n\n  submit() {\n    if (!this.selection.disabled) {\n      this.done = true;\n      this.aborted = false;\n      this.fire();\n      this.render();\n      this.out.write('\\n');\n      this.close();\n    } else this.bell();\n  }\n\n  first() {\n    this.moveCursor(0);\n    this.render();\n  }\n\n  last() {\n    this.moveCursor(this.choices.length - 1);\n    this.render();\n  }\n\n  up() {\n    if (this.cursor === 0) return this.bell();\n    this.moveCursor(this.cursor - 1);\n    this.render();\n  }\n\n  down() {\n    if (this.cursor === this.choices.length - 1) return this.bell();\n    this.moveCursor(this.cursor + 1);\n    this.render();\n  }\n\n  next() {\n    this.moveCursor((this.cursor + 1) % this.choices.length);\n    this.render();\n  }\n\n  _(c, key) {\n    if (c === ' ') return this.submit();\n  }\n\n  get selection() {\n    return this.choices[this.cursor];\n  }\n\n  render() {\n    if (this.closed) return;\n    if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText));\n    super.render();\n\n    let _entriesToDisplay = entriesToDisplay(this.cursor, this.choices.length, this.optionsPerPage),\n        startIndex = _entriesToDisplay.startIndex,\n        endIndex = _entriesToDisplay.endIndex; // Print prompt\n\n\n    this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(false), this.done ? this.selection.title : this.selection.disabled ? color.yellow(this.warn) : color.gray(this.hint)].join(' '); // Print choices\n\n    if (!this.done) {\n      this.outputText += '\\n';\n\n      for (let i = startIndex; i < endIndex; i++) {\n        let title,\n            prefix,\n            desc = '',\n            v = this.choices[i]; // Determine whether to display \"more choices\" indicators\n\n        if (i === startIndex && startIndex > 0) {\n          prefix = figures.arrowUp;\n        } else if (i === endIndex - 1 && endIndex < this.choices.length) {\n          prefix = figures.arrowDown;\n        } else {\n          prefix = ' ';\n        }\n\n        if (v.disabled) {\n          title = this.cursor === i ? color.gray().underline(v.title) : color.strikethrough().gray(v.title);\n          prefix = (this.cursor === i ? color.bold().gray(figures.pointer) + ' ' : '  ') + prefix;\n        } else {\n          title = this.cursor === i ? color.cyan().underline(v.title) : v.title;\n          prefix = (this.cursor === i ? color.cyan(figures.pointer) + ' ' : '  ') + prefix;\n\n          if (v.description && this.cursor === i) {\n            desc = ` - ${v.description}`;\n\n            if (prefix.length + title.length + desc.length >= this.out.columns || v.description.split(/\\r?\\n/).length > 1) {\n              desc = '\\n' + wrap(v.description, {\n                margin: 3,\n                width: this.out.columns\n              });\n            }\n          }\n        }\n\n        this.outputText += `${prefix} ${title}${color.gray(desc)}\\n`;\n      }\n    }\n\n    this.out.write(this.outputText);\n  }\n\n}\n\nmodule.exports = SelectPrompt;"]},"metadata":{},"sourceType":"script"}